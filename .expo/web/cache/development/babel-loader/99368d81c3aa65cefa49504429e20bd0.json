{"ast":null,"code":"var _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/screens/draft-pages/publish.tsx\";\nimport * as React from \"react\";\nimport { Spacers } from \"../../components/styled\";\nimport FakeInput from \"../../components/fake-input\";\nimport Button, { Content, ContentLeft, ContentRight } from \"../../components/button\";\nimport UserButton from \"../../components/user-button\";\nimport SectionTitle from \"../../components/section-title\";\nimport Slider from \"../../components/slider\";\nimport Switch from \"../../components/switch\";\nimport ContinueButton from \"../../components/continue-button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { send } from \"../../hooks/useAppState\";\nimport styles from \"../styles\";\nexport default function PublishPage(_ref) {\n  var _this = this;\n\n  var test = _ref.test;\n  return React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.Content,\n    contentContainerStyle: styles.ScrollingContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Slider, {\n    title: \"Test Lifespan\",\n    value: test.options.testDuration,\n    toValue: function toValue(value) {\n      return Math.floor(value / 24 / 60 / 1000) + \" days\";\n    },\n    onChange: function onChange(value) {\n      return send(\"SET_LIFESPAN\", {\n        value: value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), React.createElement(Switch, {\n    title: \"Allow Multiple Tries\",\n    value: test.options.allowMultipleTries,\n    onChange: function onChange() {\n      return send(\"TOGGLED_MULTIPLE_TRIES\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacers.M, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Invitation Link\"), React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(ContentLeft, {\n    title: test.name,\n    secondaryTitle: \"Anyone with the link can take the test.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(ContentRight, {\n    icon: \"copy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }))), React.createElement(Spacers.M, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Send Invitations\"), React.createElement(FakeInput, {\n    placeholder: \"E-mail\",\n    onPress: function onPress() {\n      return send(\"STARTED_SEARCHING_FOR_USERS\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacers.M, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), test.invitedUsers.map(function (user) {\n    return React.createElement(UserButton, {\n      key: user.id,\n      user: user,\n      onPress: function onPress() {\n        return send(\"OPENED_USER_DIALOG\", {\n          user: user\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(View, {\n    style: styles.Footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(ContinueButton, {\n    title: \"Publish\",\n    onPress: function onPress() {\n      return send(\"CONTINUED\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/screens/draft-pages/publish.tsx"],"names":["React","Spacers","FakeInput","Button","Content","ContentLeft","ContentRight","UserButton","SectionTitle","Slider","Switch","ContinueButton","send","styles","PublishPage","test","ScrollingContent","options","testDuration","value","Math","floor","allowMultipleTries","name","invitedUsers","map","user","id","Footer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Spacers, Text } from \"@components/styled\";\nimport FakeInput from \"@components/fake-input\";\nimport Input from \"@components/input\";\nimport Button, { Content, ContentLeft, ContentRight } from \"@components/button\";\nimport UserButton from \"@components/user-button\";\nimport SectionTitle from \"@components/section-title\";\nimport Slider from \"@components/slider\";\nimport Switch from \"@components/switch\";\nimport ContinueButton from \"@components/continue-button\";\nimport { ScrollView, View } from \"react-native\";\nimport * as Types from \"types\";\nimport { send } from \"@hooks/useAppState\";\nimport styles from \"../styles\";\n\nexport default function PublishPage({ test }: { test: Types.UserTest }) {\n  return (\n    <React.Fragment>\n      <ScrollView\n        style={styles.Content}\n        contentContainerStyle={styles.ScrollingContent}\n      >\n        <Slider\n          title=\"Test Lifespan\"\n          value={test.options.testDuration}\n          toValue={(value) => Math.floor(value / 24 / 60 / 1000) + \" days\"}\n          onChange={(value) => send(\"SET_LIFESPAN\", { value })}\n        />\n        <Switch\n          title=\"Allow Multiple Tries\"\n          value={test.options.allowMultipleTries}\n          onChange={() => send(\"TOGGLED_MULTIPLE_TRIES\")}\n        />\n        <Spacers.M></Spacers.M>\n        <SectionTitle>Invitation Link</SectionTitle>\n        <Button>\n          <Content>\n            <ContentLeft\n              title={test.name}\n              secondaryTitle=\"Anyone with the link can take the test.\"\n            ></ContentLeft>\n            <ContentRight icon=\"copy\" />\n          </Content>\n        </Button>\n        <Spacers.M></Spacers.M>\n        <SectionTitle>Send Invitations</SectionTitle>\n        <FakeInput\n          placeholder=\"E-mail\"\n          onPress={() => send(\"STARTED_SEARCHING_FOR_USERS\")}\n        />\n        <Spacers.M></Spacers.M>\n        {test.invitedUsers.map((user) => (\n          <UserButton\n            key={user.id}\n            user={user}\n            onPress={() => send(\"OPENED_USER_DIALOG\", { user })}\n          />\n        ))}\n      </ScrollView>\n      <View style={styles.Footer}>\n        <ContinueButton title=\"Publish\" onPress={() => send(\"CONTINUED\")} />\n      </View>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}