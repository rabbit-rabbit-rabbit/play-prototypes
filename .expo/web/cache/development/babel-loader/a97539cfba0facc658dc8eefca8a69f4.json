{"ast":null,"code":"var _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/screens/complete-test.tsx\";\nimport * as React from \"react\";\nimport * as Panel from \"../components/panel\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useAppState, { send } from \"../hooks/useAppState\";\nimport useStaleSelectedTest from \"../hooks/useStaleSelectedTest\";\nexport default function CompleteTestScreen() {\n  var local = useAppState();\n  var selectedTest = useStaleSelectedTest(local.values.selectedTest);\n  if (!selectedTest) return null;\n  return React.createElement(Panel.Container, {\n    id: \"completeTest\",\n    isOpen: local.isIn(\"completeTest\"),\n    onClose: function onClose() {\n      return send(\"CLOSED_PANEL\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Panel.Header, {\n    title: selectedTest == null ? void 0 : selectedTest.name,\n    leftButton: {\n      icon: \"arrow-left\",\n      onPress: function onPress() {\n        return send(\"CLOSED_PANEL\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  Content: {\n    paddingHorizontal: 16\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/screens/complete-test.tsx"],"names":["React","Panel","useAppState","send","useStaleSelectedTest","CompleteTestScreen","local","selectedTest","values","isIn","name","icon","onPress","styles","Content","StyleSheet","create","paddingHorizontal"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ;;;AAOA,OAAOC,WAAP,IAAsBC,IAAtB;AAGA,OAAOC,oBAAP;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,MAAMC,KAAK,GAAGJ,WAAW,EAAzB;AACA,MAAMK,YAAY,GAAGH,oBAAoB,CAACE,KAAK,CAACE,MAAN,CAAaD,YAAd,CAAzC;AAEA,MAAI,CAACA,YAAL,EAAmB,OAAO,IAAP;AAEnB,SACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,MAAM,EAAED,KAAK,CAACG,IAAN,CAAW,cAAX,CAFV;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMN,IAAI,CAAC,cAAD,CAAV;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,KAAK,EAAEI,YAAF,oBAAEA,YAAY,CAAEG,IADvB;AAEE,IAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,YADI;AAEVC,MAAAA,OAAO,EAAE;AAAA,eAAMT,IAAI,CAAC,cAAD,CAAV;AAAA;AAFC,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEU,MAAM,CAACC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,OAAO,EAAE;AACPG,IAAAA,iBAAiB,EAAE;AADZ;AADsB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\"\nimport * as Panel from \"@components/panel\"\nimport { Spacers } from \"@components/styled\"\nimport UserButton from \"@components/user-button\"\nimport Input from \"@components/input\"\nimport SectionTitle from \"@components/section-title\"\nimport CopyLinkButton from \"@components/copy-link-button\"\nimport { StyleSheet, ScrollView } from \"react-native\"\nimport useAppState, { send } from \"@hooks/useAppState\"\nimport { useLocalState } from \"@state-designer/react\"\nimport * as Types from \"types\"\nimport useStaleSelectedTest from \"@hooks/useStaleSelectedTest\"\n\nexport default function CompleteTestScreen() {\n  const local = useAppState()\n  const selectedTest = useStaleSelectedTest(local.values.selectedTest)\n\n  if (!selectedTest) return null\n\n  return (\n    <Panel.Container\n      id=\"completeTest\"\n      isOpen={local.isIn(\"completeTest\")}\n      onClose={() => send(\"CLOSED_PANEL\")}\n    >\n      <Panel.Header\n        title={selectedTest?.name}\n        leftButton={{\n          icon: \"arrow-left\",\n          onPress: () => send(\"CLOSED_PANEL\"),\n        }}\n      />\n      <ScrollView style={styles.Content}></ScrollView>\n    </Panel.Container>\n  )\n}\n\nconst styles = StyleSheet.create({\n  Content: {\n    paddingHorizontal: 16,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}