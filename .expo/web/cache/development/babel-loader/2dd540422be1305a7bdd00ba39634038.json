{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styled } from \"dripsy\";\nexport var Text = {\n  Body: styled(_Text)({\n    color: \"$primaryFill\",\n    fontSize: \"$body\",\n    fontFamily: \"$body\",\n    fontWeight: \"$body\",\n    letterSpacing: \"$body\"\n  }),\n  Title: styled(_Text)({\n    color: \"$primaryFill\",\n    fontSize: \"$title\",\n    fontFamily: \"$title\",\n    fontWeight: \"$title\",\n    letterSpacing: \"$title\"\n  }),\n  Instruction: styled(_Text)({\n    color: \"$secondaryFill\",\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    paddingHorizontal: 32\n  }),\n  Detail: styled(_Text)({\n    color: \"$secondaryFill\",\n    fontSize: \"$detail\",\n    fontFamily: \"$detail\",\n    fontWeight: \"$detail\",\n    letterSpacing: \"$detail\",\n    lineHeight: \"$body\"\n  }),\n  Label: styled(_Text)({\n    color: \"$primaryFill\",\n    fontSize: \"$title\",\n    fontFamily: \"$body\",\n    fontWeight: \"$body\",\n    letterSpacing: \"$body\",\n    lineHeight: \"$body\"\n  }),\n  Section: styled(_Text)({\n    color: \"$secondaryFill\",\n    fontSize: \"$section\",\n    fontFamily: \"$body\",\n    fontWeight: \"$body\",\n    letterSpacing: \"$section\",\n    textTransform: \"uppercase\"\n  })\n};\nexport var Views = {\n  Item: styled(View)({\n    width: \"100%\",\n    height: 64,\n    backgroundColor: \"$quaternaryFill\",\n    borderRadius: 3,\n    marginBottom: 2,\n    overflow: \"hidden\"\n  })\n};\nexport var Buttons = {\n  ListButton: styled(TouchableOpacity)({\n    width: \"100%\",\n    height: 64,\n    backgroundColor: \"$quaternaryFill\",\n    borderRadius: 3,\n    marginBottom: 2,\n    overflow: \"hidden\"\n  })\n};\nvar spacer = {\n  width: \"100%\"\n};\nexport var Spacers = {\n  XXS: styled(View)(_objectSpread(_objectSpread({}, spacer), {}, {\n    height: 4\n  })),\n  XS: styled(View)(_objectSpread(_objectSpread({}, spacer), {}, {\n    height: 8\n  })),\n  S: styled(View)(_objectSpread(_objectSpread({}, spacer), {}, {\n    height: 16\n  })),\n  M: styled(View)(_objectSpread(_objectSpread({}, spacer), {}, {\n    height: 24\n  })),\n  L: styled(View)(_objectSpread(_objectSpread({}, spacer), {}, {\n    height: 32\n  })),\n  XL: styled(View)(_objectSpread(_objectSpread({}, spacer), {}, {\n    height: 40\n  }))\n};","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/components/styled.tsx"],"names":["styled","Text","Body","_Text","color","fontSize","fontFamily","fontWeight","letterSpacing","Title","Instruction","lineHeight","textAlign","paddingHorizontal","Detail","Label","Section","textTransform","Views","Item","View","width","height","backgroundColor","borderRadius","marginBottom","overflow","Buttons","ListButton","TouchableOpacity","spacer","Spacers","XXS","XS","S","M","L","XL"],"mappings":"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","sourcesContent":["import { Text as _Text, View, TouchableOpacity } from \"react-native\"\nimport { styled } from \"dripsy\"\n\nexport const Text = {\n  Body: styled(_Text)({\n    color: \"$primaryFill\",\n    fontSize: \"$body\",\n    fontFamily: \"$body\",\n    fontWeight: \"$body\",\n    letterSpacing: \"$body\",\n  }),\n  Title: styled(_Text)({\n    color: \"$primaryFill\",\n    fontSize: \"$title\",\n    fontFamily: \"$title\",\n    fontWeight: \"$title\",\n    letterSpacing: \"$title\",\n  }),\n  Instruction: styled(_Text)({\n    color: \"$secondaryFill\",\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    paddingHorizontal: 32,\n  }),\n  Detail: styled(_Text)({\n    color: \"$secondaryFill\",\n    fontSize: \"$detail\",\n    fontFamily: \"$detail\",\n    fontWeight: \"$detail\",\n    letterSpacing: \"$detail\",\n    lineHeight: \"$body\",\n  }),\n  Label: styled(_Text)({\n    color: \"$primaryFill\",\n    fontSize: \"$title\",\n    fontFamily: \"$body\",\n    fontWeight: \"$body\",\n    letterSpacing: \"$body\",\n    lineHeight: \"$body\",\n  }),\n  Section: styled(_Text)({\n    color: \"$secondaryFill\",\n    fontSize: \"$section\",\n    fontFamily: \"$body\",\n    fontWeight: \"$body\",\n    letterSpacing: \"$section\",\n    textTransform: \"uppercase\",\n  }),\n}\n\nexport const Views = {\n  Item: styled(View)({\n    width: \"100%\",\n    height: 64,\n    backgroundColor: \"$quaternaryFill\",\n    borderRadius: 3,\n    marginBottom: 2,\n    overflow: \"hidden\",\n  }),\n}\n\nexport const Buttons = {\n  ListButton: styled(TouchableOpacity)({\n    width: \"100%\",\n    height: 64,\n    backgroundColor: \"$quaternaryFill\",\n    borderRadius: 3,\n    marginBottom: 2,\n    overflow: \"hidden\",\n  }),\n}\n\nconst spacer = {\n  width: \"100%\",\n}\n\nexport const Spacers = {\n  XXS: styled(View)({ ...spacer, height: 4 }),\n  XS: styled(View)({ ...spacer, height: 8 }),\n  S: styled(View)({ ...spacer, height: 16 }),\n  M: styled(View)({ ...spacer, height: 24 }),\n  L: styled(View)({ ...spacer, height: 32 }),\n  XL: styled(View)({ ...spacer, height: 40 }),\n}\n"]},"metadata":{},"sourceType":"module"}