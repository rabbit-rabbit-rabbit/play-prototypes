{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/screens/dialogs/create-draft-dialog.tsx\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BlurView } from \"expo-blur\";\nimport Dialog from \"react-native-dialog\";\nimport { send } from \"../../hooks/useAppState\";\nvar blurComponentIOS = React.createElement(BlurView, {\n  style: StyleSheet.absoluteFill,\n  blurType: \"xlight\",\n  blurAmount: 50,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n});\nexport default function CreateDraftDialog(_ref) {\n  var visible = _ref.visible;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var rInput = React.useRef();\n  React.useEffect(function () {\n    if (visible) {\n      setName(\"\");\n      setTimeout(function () {\n        var input = rInput.current;\n        if (!input) return;\n        input.focus();\n      }, 100);\n    }\n  }, [visible]);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Dialog.Container, {\n    visible: visible,\n    onBackdropPress: function onBackdropPress() {\n      return send(\"CLOSED_DIALOG\");\n    },\n    headerStyle: styles.Header,\n    contentStyle: styles.Content,\n    footerStyle: styles.Footer,\n    blurComponentIOS: blurComponentIOS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Dialog.Title, {\n    style: styles.Title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Create a User Test\"), React.createElement(Dialog.Input, {\n    textInputRef: rInput,\n    placeholder: \"Name your User Test\",\n    placeholderTextColor: \"rgba(255, 255, 255, .3)\",\n    value: name,\n    onChangeText: function onChangeText(value) {\n      setName(value);\n    },\n    wrapperStyle: styles.InputWrapper,\n    style: styles.TextInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Cancel\",\n    onPress: function onPress() {\n      return send(\"CLOSED_DIALOG\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Create\",\n    disabled: name.length < 3,\n    color: name.length === 0 ? \"rgba(255, 255, 255, .5)\" : \"#0085FF\",\n    onPress: function onPress() {\n      return name.length > 3 && send(\"CREATED_DRAFT\", {\n        name: name\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  Content: {\n    backgroundColor: \"#1d1d1d\"\n  },\n  Header: {\n    color: \"#fff\"\n  },\n  Footer: {\n    color: \"#fff\"\n  },\n  Title: {\n    color: \"#fff\"\n  },\n  InputWrapper: {\n    backgroundColor: \"rgba(0,0,0,.1)\",\n    color: \"#fff\"\n  },\n  TextInput: {\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/screens/dialogs/create-draft-dialog.tsx"],"names":["React","BlurView","Dialog","send","blurComponentIOS","StyleSheet","absoluteFill","CreateDraftDialog","visible","useState","name","setName","rInput","useRef","useEffect","setTimeout","input","current","focus","styles","Header","Content","Footer","Title","value","InputWrapper","TextInput","length","create","backgroundColor","color"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport { StyleSheet, TextInput, Text, View } from \"react-native\"\nimport { BlurView } from \"expo-blur\"\nimport Dialog from \"react-native-dialog\"\nimport useAppState, { send } from \"@hooks/useAppState\"\n\nconst blurComponentIOS = (\n  <BlurView style={StyleSheet.absoluteFill} blurType=\"xlight\" blurAmount={50} />\n)\n\nexport default function CreateDraftDialog({ visible }: { visible: boolean }) {\n  const [name, setName] = React.useState(\"\")\n  const rInput = React.useRef<TextInput>()\n\n  React.useEffect(() => {\n    if (visible) {\n      setName(\"\")\n      setTimeout(() => {\n        const input = rInput.current\n        if (!input) return\n\n        input.focus()\n      }, 100)\n    }\n  }, [visible])\n\n  return (\n    <View>\n      <Dialog.Container\n        visible={visible}\n        onBackdropPress={() => send(\"CLOSED_DIALOG\")}\n        headerStyle={styles.Header}\n        contentStyle={styles.Content}\n        footerStyle={styles.Footer}\n        blurComponentIOS={blurComponentIOS}\n      >\n        <Dialog.Title style={styles.Title}>Create a User Test</Dialog.Title>\n        <Dialog.Input\n          textInputRef={rInput}\n          placeholder=\"Name your User Test\"\n          placeholderTextColor=\"rgba(255, 255, 255, .3)\"\n          value={name}\n          onChangeText={(value: string) => {\n            setName(value)\n          }}\n          wrapperStyle={styles.InputWrapper}\n          style={styles.TextInput}\n        />\n        <Dialog.Button label=\"Cancel\" onPress={() => send(\"CLOSED_DIALOG\")} />\n        <Dialog.Button\n          label=\"Create\"\n          disabled={name.length < 3}\n          color={name.length === 0 ? \"rgba(255, 255, 255, .5)\" : \"#0085FF\"}\n          onPress={() => name.length > 3 && send(\"CREATED_DRAFT\", { name })}\n        />\n      </Dialog.Container>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  Content: { backgroundColor: \"#1d1d1d\" },\n  Header: { color: \"#fff\" },\n  Footer: { color: \"#fff\" },\n  Title: { color: \"#fff\" },\n  InputWrapper: { backgroundColor: \"rgba(0,0,0,.1)\", color: \"#fff\" },\n  TextInput: { color: \"#fff\" },\n})\n"]},"metadata":{},"sourceType":"module"}