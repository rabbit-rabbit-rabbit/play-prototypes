{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/node_modules/react-native-dialog/src/Switch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar DialogSwitch = function DialogSwitch(props) {\n  var label = props.label,\n      nodeProps = _objectWithoutProperties(props, [\"label\"]);\n\n  return React.createElement(View, {\n    style: styles.switchWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, label), React.createElement(Switch, _extends({}, nodeProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  })));\n};\n\nDialogSwitch.propTypes = _objectSpread(_objectSpread({}, Switch.propTypes), {}, {\n  label: PropTypes.string\n});\nDialogSwitch.displayName = \"DialogSwitch\";\nvar styles = StyleSheet.create({\n  switchWrapper: Platform.select({\n    ios: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginHorizontal: 20,\n      marginBottom: 14,\n      paddingHorizontal: 8\n    },\n    android: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginHorizontal: 10,\n      marginBottom: 20\n    }\n  }),\n  label: Platform.select({\n    ios: {\n      flex: 1,\n      paddingRight: 8,\n      fontSize: 13,\n      color: \"black\"\n    },\n    android: {\n      flex: 1,\n      paddingRight: 8,\n      fontSize: 16,\n      color: \"#33383D\"\n    }\n  })\n});\nexport default DialogSwitch;","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/node_modules/react-native-dialog/src/Switch.js"],"names":["PropTypes","React","DialogSwitch","props","label","nodeProps","styles","switchWrapper","propTypes","Switch","string","displayName","StyleSheet","create","Platform","select","ios","flexDirection","justifyContent","alignItems","marginHorizontal","marginBottom","paddingHorizontal","android","flex","paddingRight","fontSize","color"],"mappings":";;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MACtBC,KADsB,GACED,KADF,CACtBC,KADsB;AAAA,MACZC,SADY,4BACEF,KADF;;AAE9B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,KAA5B,CADF,EAEE,oBAAC,MAAD,eAAYC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,CARD;;AAUAH,YAAY,CAACM,SAAb,mCACKC,MAAM,CAACD,SADZ;AAEEJ,EAAAA,KAAK,EAAEJ,SAAS,CAACU;AAFnB;AAKAR,YAAY,CAACS,WAAb,GAA2B,cAA3B;AAEA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,aAAa,EAAEO,QAAQ,CAACC,MAAT,CAAgB;AAC7BC,IAAAA,GAAG,EAAE;AACHC,MAAAA,aAAa,EAAE,KADZ;AAEHC,MAAAA,cAAc,EAAE,eAFb;AAGHC,MAAAA,UAAU,EAAE,QAHT;AAIHC,MAAAA,gBAAgB,EAAE,EAJf;AAKHC,MAAAA,YAAY,EAAE,EALX;AAMHC,MAAAA,iBAAiB,EAAE;AANhB,KADwB;AAS7BC,IAAAA,OAAO,EAAE;AACPN,MAAAA,aAAa,EAAE,KADR;AAEPC,MAAAA,cAAc,EAAE,eAFT;AAGPC,MAAAA,UAAU,EAAE,QAHL;AAIPC,MAAAA,gBAAgB,EAAE,EAJX;AAKPC,MAAAA,YAAY,EAAE;AALP;AAToB,GAAhB,CADgB;AAkB/BjB,EAAAA,KAAK,EAAEU,QAAQ,CAACC,MAAT,CAAgB;AACrBC,IAAAA,GAAG,EAAE;AACHQ,MAAAA,IAAI,EAAE,CADH;AAEHC,MAAAA,YAAY,EAAE,CAFX;AAGHC,MAAAA,QAAQ,EAAE,EAHP;AAIHC,MAAAA,KAAK,EAAE;AAJJ,KADgB;AAOrBJ,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,CADC;AAEPC,MAAAA,YAAY,EAAE,CAFP;AAGPC,MAAAA,QAAQ,EAAE,EAHH;AAIPC,MAAAA,KAAK,EAAE;AAJA;AAPY,GAAhB;AAlBwB,CAAlB,CAAf;AAkCA,eAAezB,YAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Platform, StyleSheet, Switch, Text, View } from \"react-native\";\n\nconst DialogSwitch = (props) => {\n  const { label, ...nodeProps } = props;\n  return (\n    <View style={styles.switchWrapper}>\n      <Text style={styles.label}>{label}</Text>\n      <Switch {...nodeProps} />\n    </View>\n  );\n};\n\nDialogSwitch.propTypes = {\n  ...Switch.propTypes,\n  label: PropTypes.string,\n};\n\nDialogSwitch.displayName = \"DialogSwitch\";\n\nconst styles = StyleSheet.create({\n  switchWrapper: Platform.select({\n    ios: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginHorizontal: 20,\n      marginBottom: 14,\n      paddingHorizontal: 8,\n    },\n    android: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginHorizontal: 10,\n      marginBottom: 20,\n    },\n  }),\n  label: Platform.select({\n    ios: {\n      flex: 1,\n      paddingRight: 8,\n      fontSize: 13,\n      color: \"black\",\n    },\n    android: {\n      flex: 1,\n      paddingRight: 8,\n      fontSize: 16,\n      color: \"#33383D\",\n    },\n  }),\n});\n\nexport default DialogSwitch;\n"]},"metadata":{},"sourceType":"module"}