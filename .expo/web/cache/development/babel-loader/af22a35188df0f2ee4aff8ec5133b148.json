{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/screens/find-user.tsx\";\nimport * as React from \"react\";\nimport * as Panel from \"../components/panel\";\nimport UserButton from \"../components/user-button\";\nimport Input from \"../components/input\";\nimport { Spacers } from \"../components/styled\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useAppState, { send } from \"../hooks/useAppState\";\nexport default function FindUserScreen() {\n  var _this = this;\n\n  var local = useAppState();\n  var allUsers = local.data.users;\n  var visible = local.isIn(\"findingUsersModal\");\n  var selectedTest = local.values.selectedTest;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(selectedTest ? allUsers.filter(function (user) {\n    return !selectedTest.invitedUsers.includes(user);\n  }) : allUsers),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      users = _React$useState4[0],\n      setUsers = _React$useState4[1];\n\n  var rInput = React.useRef();\n  React.useEffect(function () {\n    if (visible) {\n      setValue(\"\");\n      setUsers(selectedTest ? allUsers.filter(function (user) {\n        return !selectedTest.invitedUsers.includes(user);\n      }) : allUsers);\n    }\n  }, [visible]);\n  var anon = {\n    id: \"anon\",\n    name: value,\n    email: \"\"\n  };\n\n  function handleChange(v) {\n    setValue(v);\n    var lcv = v.toLowerCase();\n    var usersToSearch = selectedTest ? allUsers.filter(function (user) {\n      return !selectedTest.invitedUsers.includes(user);\n    }) : allUsers;\n    setUsers(v ? usersToSearch.filter(function (user) {\n      return user.name.toLowerCase().startsWith(lcv) || user.email.toLowerCase().startsWith(lcv);\n    }) : allUsers);\n  }\n\n  return React.createElement(Panel.Container, {\n    id: \"findUser\",\n    isOpen: visible,\n    onClose: function onClose() {\n      return send(\"CLOSED_MODAL\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Panel.Header, {\n    title: \"Share\",\n    leftAction: {\n      title: \"Cancel\",\n      onPress: function onPress() {\n        return send(\"CLOSED_MODAL\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    ref: rInput,\n    value: value,\n    onChange: function onChange() {\n      var next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      return handleChange(next);\n    },\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacers.XS, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, users.map(function (user) {\n    return React.createElement(UserButton, {\n      key: user.id,\n      user: user,\n      onPress: function onPress() {\n        return send(\"SELECTED_USER\", {\n          user: user\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    });\n  }), value ? React.createElement(UserButton, {\n    user: anon,\n    onPress: function onPress() {\n      return send(\"SELECTED_USER\", {\n        user: anon\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }) : null)));\n}\nvar styles = StyleSheet.create({\n  Container: {\n    paddingHorizontal: 16,\n    flex: 1\n  },\n  Content: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/screens/find-user.tsx"],"names":["React","Panel","UserButton","Input","Spacers","useAppState","send","FindUserScreen","local","allUsers","data","users","visible","isIn","selectedTest","values","useState","value","setValue","filter","user","invitedUsers","includes","setUsers","rInput","useRef","useEffect","anon","id","name","email","handleChange","v","lcv","toLowerCase","usersToSearch","startsWith","title","onPress","styles","Container","next","Content","map","StyleSheet","create","paddingHorizontal","flex"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport * as Panel from \"@components/panel\"\nimport TestButton from \"@components/test-button\"\nimport UserButton from \"@components/user-button\"\nimport Input from \"@components/input\"\nimport { Spacers } from \"@components/styled\"\nimport SectionTitle from \"@components/section-title\"\nimport CopyLinkButton from \"@components/copy-link-button\"\nimport {\n  StyleSheet,\n  ScrollView,\n  TextInput,\n  View,\n  FlatList,\n  Text,\n} from \"react-native\"\nimport * as Types from \"../types\"\nimport * as Static from \"../static\"\nimport useAppState, { send } from \"@hooks/useAppState\"\nimport CreateDraftDialog from \"./dialogs/create-draft-dialog\"\nimport PublishTestDialog from \"./dialogs/publish-draft-dialog\"\nimport DraftTestDialog from \"./dialogs/draft-test-dialog\"\n\nexport default function FindUserScreen() {\n  const local = useAppState()\n  const { users: allUsers } = local.data\n  const visible = local.isIn(\"findingUsersModal\")\n  const { selectedTest } = local.values\n\n  const [value, setValue] = React.useState(\"\")\n  const [users, setUsers] = React.useState<Types.User[]>(\n    selectedTest\n      ? allUsers.filter((user) => !selectedTest.invitedUsers.includes(user))\n      : allUsers\n  )\n\n  const rInput = React.useRef<TextInput>()\n\n  React.useEffect(() => {\n    if (visible) {\n      setValue(\"\")\n      setUsers(\n        selectedTest\n          ? allUsers.filter((user) => !selectedTest.invitedUsers.includes(user))\n          : allUsers\n      )\n    }\n  }, [visible])\n\n  const anon = {\n    id: \"anon\",\n    name: value,\n    email: \"\",\n  }\n\n  function handleChange(v: string) {\n    setValue(v)\n    const lcv = v.toLowerCase()\n\n    const usersToSearch = selectedTest\n      ? allUsers.filter((user) => !selectedTest.invitedUsers.includes(user))\n      : allUsers\n\n    setUsers(\n      v\n        ? usersToSearch.filter(\n            (user) =>\n              user.name.toLowerCase().startsWith(lcv) ||\n              user.email.toLowerCase().startsWith(lcv)\n          )\n        : allUsers\n    )\n  }\n\n  return (\n    <Panel.Container\n      id=\"findUser\"\n      isOpen={visible}\n      onClose={() => send(\"CLOSED_MODAL\")}\n    >\n      <Panel.Header\n        title=\"Share\"\n        leftAction={{\n          title: \"Cancel\",\n          onPress: () => send(\"CLOSED_MODAL\"),\n        }}\n      />\n      <View style={styles.Container}>\n        <Input\n          ref={rInput}\n          value={value}\n          onChange={(next = \"\") => handleChange(next)}\n          placeholder=\"E-mail\"\n        />\n        <Spacers.XS />\n        <ScrollView style={styles.Content}>\n          {users.map((user) => (\n            <UserButton\n              key={user.id}\n              user={user}\n              onPress={() => send(\"SELECTED_USER\", { user })}\n            />\n          ))}\n          {value ? (\n            <UserButton\n              user={anon}\n              onPress={() => send(\"SELECTED_USER\", { user: anon })}\n            />\n          ) : null}\n        </ScrollView>\n      </View>\n    </Panel.Container>\n  )\n}\n\nconst styles = StyleSheet.create({\n  Container: {\n    paddingHorizontal: 16,\n    flex: 1,\n  },\n  Content: {\n    flex: 1,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}