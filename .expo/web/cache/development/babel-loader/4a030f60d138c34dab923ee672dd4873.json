{"ast":null,"code":"var _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/screens/create-goal.tsx\";\nimport * as React from \"react\";\nimport * as Panel from \"../components/panel\";\nimport { Spacers } from \"../components/styled\";\nimport Button, { Content, ContentLeft } from \"../components/button\";\nimport JourneyDetail from \"../components/journey-detail\";\nimport Input from \"../components/input\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport _Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"../components/styled\";\nimport useAppState, { send } from \"../hooks/useAppState\";\nimport styles from \"./styles\";\nimport { Feather } from \"@expo/vector-icons\";\nexport default function CreateGoal() {\n  var local = useAppState();\n  var selectedTest = local.data.tests.find(function (t) {\n    return t.id === local.data.selectedTestId;\n  });\n  var selectedGoal = local.values.selectedGoal;\n  if (!selectedGoal) return null;\n  return React.createElement(Panel.Container, {\n    id: \"createGoal\",\n    isOpen: local.isIn(\"creatingGoal\"),\n    onClose: function onClose() {\n      return send(\"CLOSED_GOALS\");\n    },\n    onCloseAttempt: function onCloseAttempt() {\n      return send(\"CLOSED_GOALS\");\n    },\n    stayOpen: local.isIn(\"creatingGoal\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Panel.Header, {\n    title: \"User Goal\",\n    leftAction: {\n      title: \"Cancel\",\n      onPress: function onPress() {\n        return send(\"CLOSED_GOALS\");\n      }\n    },\n    rightAction: {\n      title: \"Create\",\n      onPress: function onPress() {\n        return send(\"CREATED_GOAL\");\n      },\n      disabled: selectedGoal.description.length === 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Text.Instruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Write a short description of the goal, and create the expected path to complete it.\"), React.createElement(Spacers.M, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    value: selectedGoal.description,\n    onChange: function onChange(text) {\n      return send(\"CHANGED_GOAL_DESCRIPTION\", {\n        text: text\n      });\n    },\n    lines: 5,\n    placeholder: \"Navigate to the profile page.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacers.S, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), selectedGoal.journey ? React.createElement(Button, {\n    onPress: function onPress() {\n      return send(\"SELECTED_JOURNEY\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(Content, {\n    style: localStyles.ButtonContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, React.createElement(Text.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Expected Journey\"), React.createElement(JourneyDetail, {\n    goal: selectedGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), React.createElement(Feather, {\n    name: \"play\",\n    color: \"#00FF9E\",\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }))) : React.createElement(Button, {\n    onPress: function onPress() {\n      return send(\"RECORDED_JOURNEY\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(ContentLeft, {\n    title: \"Expected Journey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), React.createElement(_Text, {\n    style: styles.Chip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"RECORD\")))));\n}\nvar localStyles = StyleSheet.create({\n  ButtonContent: {\n    alignItems: \"center\"\n  },\n  DetailRow: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  Detail: {\n    fontSize: 12,\n    color: \"rgba(255, 255, 255, .5)\"\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/screens/create-goal.tsx"],"names":["React","Panel","Spacers","Button","Content","ContentLeft","JourneyDetail","Input","Text","useAppState","send","styles","Feather","CreateGoal","local","selectedTest","data","tests","find","t","id","selectedTestId","selectedGoal","values","isIn","title","onPress","disabled","description","length","text","journey","localStyles","ButtonContent","Chip","StyleSheet","create","alignItems","DetailRow","flexDirection","marginTop","Detail","fontSize","color"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport * as Panel from \"@components/panel\"\nimport { Spacers } from \"@components/styled\"\nimport Button, { Content, ContentLeft, ContentRight } from \"@components/button\"\nimport JourneyDetail from \"@components/journey-detail\"\nimport Input from \"@components/input\"\nimport {\n  View,\n  ScrollView,\n  Text as _Text,\n  TextInput,\n  StyleSheet,\n} from \"react-native\"\nimport { Text } from \"@components/styled\"\nimport useAppState, { send } from \"@hooks/useAppState\"\nimport styles from \"./styles\"\nimport * as Types from \"types\"\nimport useStaleSelectedTest from \"@hooks/useStaleSelectedTest\"\nimport IconButton from \"@components/icon-button\"\nimport { secondsToTimestamp } from \"../utils\"\nimport { Feather } from \"@expo/vector-icons\"\n\nexport default function CreateGoal() {\n  // const [text, setText] = React.useState(\"\")\n  const local = useAppState()\n\n  const selectedTest = local.data.tests.find(\n    (t) => t.id === local.data.selectedTestId\n  )\n\n  const { selectedGoal } = local.values\n\n  if (!selectedGoal) return null\n\n  return (\n    <Panel.Container\n      id=\"createGoal\"\n      isOpen={local.isIn(\"creatingGoal\")}\n      onClose={() => send(\"CLOSED_GOALS\")}\n      onCloseAttempt={() => send(\"CLOSED_GOALS\")}\n      stayOpen={local.isIn(\"creatingGoal\")}\n    >\n      <Panel.Header\n        title=\"User Goal\"\n        leftAction={{\n          title: \"Cancel\",\n          onPress: () => send(\"CLOSED_GOALS\"),\n        }}\n        rightAction={{\n          title: \"Create\",\n          onPress: () => send(\"CREATED_GOAL\"),\n          disabled: selectedGoal.description.length === 0,\n        }}\n      />\n      <ScrollView style={styles.Content}>\n        <Text.Instruction>\n          Write a short description of the goal, and create the expected path to\n          complete it.\n        </Text.Instruction>\n        <Spacers.M />\n        <Input\n          value={selectedGoal.description}\n          onChange={(text) => send(\"CHANGED_GOAL_DESCRIPTION\", { text })}\n          lines={5}\n          placeholder=\"Navigate to the profile page.\"\n        />\n        <Spacers.S />\n        {selectedGoal.journey ? (\n          <Button onPress={() => send(\"SELECTED_JOURNEY\")}>\n            <Content style={localStyles.ButtonContent}>\n              <View>\n                <Text.Label>Expected Journey</Text.Label>\n                <JourneyDetail goal={selectedGoal} />\n              </View>\n              <Feather name=\"play\" color=\"#00FF9E\" size={18} />\n            </Content>\n          </Button>\n        ) : (\n          <Button onPress={() => send(\"RECORDED_JOURNEY\")}>\n            <Content>\n              <ContentLeft title=\"Expected Journey\"></ContentLeft>\n              <_Text style={styles.Chip}>RECORD</_Text>\n            </Content>\n          </Button>\n        )}\n      </ScrollView>\n    </Panel.Container>\n  )\n}\n\nconst localStyles = StyleSheet.create({\n  ButtonContent: {\n    alignItems: \"center\",\n  },\n  DetailRow: {\n    flexDirection: \"row\",\n    marginTop: 4,\n  },\n  Detail: {\n    fontSize: 12,\n    color: \"rgba(255, 255, 255, .5)\",\n  },\n})\n"]},"metadata":{},"sourceType":"module"}