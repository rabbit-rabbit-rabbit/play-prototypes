{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/components/test-button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button, { Content, ContentLeft, ContentRight } from \"./button\";\nimport * as Static from \"../static\";\nexport default function TestButton(_ref) {\n  var test = _ref.test,\n      rest = _objectWithoutProperties(_ref, [\"test\"]);\n\n  var label = test.status === \"inProgress\" ? Math.floor(test.timeRemaining / Static.maxDuration * 5) + \" Days Left\" : test.status === \"complete\" ? \"Complete\" : \"Draft\";\n  var icon = test.status === \"inProgress\" ? \"clock\" : test.status === \"complete\" ? \"check-circle\" : \"file\";\n  var color = test.status === \"draft\" ? \"#FFAF00\" : \"#00FF9D\";\n  return React.createElement(Button, _extends({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, test.status === \"inProgress\" && React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.ProgressBar), {}, {\n      width: test.timeRemaining / Static.maxDuration * 100 + \"%\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(ContentLeft, {\n    title: test.name,\n    secondaryTitle: test.invitedUsers.length > 0 ? test.invitedUsers.length + \" Users\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), React.createElement(ContentRight, {\n    label: label,\n    icon: icon,\n    iconColor: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  ProgressBar: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    height: 64,\n    backgroundColor: \"#00ff9d\",\n    opacity: 0.1\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/components/test-button.tsx"],"names":["React","Button","Content","ContentLeft","ContentRight","Static","TestButton","test","rest","label","status","Math","floor","timeRemaining","maxDuration","icon","color","styles","ProgressBar","width","name","invitedUsers","length","StyleSheet","create","position","top","right","height","backgroundColor","opacity"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,MAAP,IAEEC,OAFF,EAGEC,WAHF,EAIEC,YAJF;AAOA,OAAO,KAAKC,MAAZ;AAMA,eAAe,SAASC,UAAT,OAAwD;AAAA,MAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,MAAzBC,IAAyB;;AACrE,MAAMC,KAAK,GACTF,IAAI,CAACG,MAAL,KAAgB,YAAhB,GACOC,IAAI,CAACC,KAAL,CAAYL,IAAI,CAACM,aAAL,GAAqBR,MAAM,CAACS,WAA7B,GAA4C,CAAvD,CADP,kBAEIP,IAAI,CAACG,MAAL,KAAgB,UAAhB,GACA,UADA,GAEA,OALN;AAOA,MAAMK,IAAI,GACRR,IAAI,CAACG,MAAL,KAAgB,YAAhB,GACI,OADJ,GAEIH,IAAI,CAACG,MAAL,KAAgB,UAAhB,GACA,cADA,GAEA,MALN;AAOA,MAAMM,KAAK,GAAGT,IAAI,CAACG,MAAL,KAAgB,OAAhB,GAA0B,SAA1B,GAAsC,SAApD;AAEA,SACE,oBAAC,MAAD,eAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACG,MAAL,KAAgB,YAAhB,IACC,oBAAC,IAAD;AACE,IAAA,KAAK,kCACAO,MAAM,CAACC,WADP;AAEHC,MAAAA,KAAK,EAAGZ,IAAI,CAACM,aAAL,GAAqBR,MAAM,CAACS,WAA7B,GAA4C,GAA5C,GAAkD;AAFtD,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEP,IAAI,CAACa,IADd;AAEE,IAAA,cAAc,EACZb,IAAI,CAACc,YAAL,CAAkBC,MAAlB,GAA2B,CAA3B,GACOf,IAAI,CAACc,YAAL,CAAkBC,MADzB,cAEI,EALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEb,KAArB;AAA4B,IAAA,IAAI,EAAEM,IAAlC;AAAwC,IAAA,SAAS,EAAEC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CATF,CADF,CADF;AAyBD;AAED,IAAMC,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,WAAW,EAAE;AACXO,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,GAAG,EAAE,CAFM;AAGXC,IAAAA,KAAK,EAAE,CAHI;AAIXC,IAAAA,MAAM,EAAE,EAJG;AAKXC,IAAAA,eAAe,EAAE,SALN;AAMXC,IAAAA,OAAO,EAAE;AANE;AADkB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\"\nimport { StyleSheet, View, Text } from \"react-native\"\nimport Button, {\n  ButtonProps,\n  Content,\n  ContentLeft,\n  ContentRight,\n} from \"./button\"\nimport * as Types from \"types\"\nimport * as Static from \"../static\"\n\nexport type TestButtonProps = {\n  test: Types.UserTest\n} & ButtonProps\n\nexport default function TestButton({ test, ...rest }: TestButtonProps) {\n  const label =\n    test.status === \"inProgress\"\n      ? `${Math.floor((test.timeRemaining / Static.maxDuration) * 5)} Days Left`\n      : test.status === \"complete\"\n      ? \"Complete\"\n      : \"Draft\"\n\n  const icon =\n    test.status === \"inProgress\"\n      ? \"clock\"\n      : test.status === \"complete\"\n      ? \"check-circle\"\n      : \"file\"\n\n  const color = test.status === \"draft\" ? \"#FFAF00\" : \"#00FF9D\"\n\n  return (\n    <Button {...rest}>\n      <React.Fragment>\n        {test.status === \"inProgress\" && (\n          <View\n            style={{\n              ...styles.ProgressBar,\n              width: (test.timeRemaining / Static.maxDuration) * 100 + \"%\",\n            }}\n          />\n        )}\n        <Content>\n          <ContentLeft\n            title={test.name}\n            secondaryTitle={\n              test.invitedUsers.length > 0\n                ? `${test.invitedUsers.length} Users`\n                : \"\"\n            }\n          />\n          <ContentRight label={label} icon={icon} iconColor={color} />\n        </Content>\n      </React.Fragment>\n    </Button>\n  )\n}\n\nconst styles = StyleSheet.create({\n  ProgressBar: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    height: 64,\n    backgroundColor: \"#00ff9d\",\n    opacity: 0.1,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}