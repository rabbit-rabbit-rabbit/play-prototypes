{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/components/slider.tsx\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function UserButton(_ref) {\n  var title = _ref.title,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? 0 : _ref$value,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 10 : _ref$max,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step,\n      toValue = _ref.toValue,\n      onChange = _ref.onChange,\n      rest = _objectWithoutProperties(_ref, [\"title\", \"value\", \"min\", \"max\", \"step\", \"toValue\", \"onChange\"]);\n\n  var rWidth = React.useRef(0);\n  var rLastX = React.useRef(0);\n  var rKnob = React.useRef(new Animated.ValueXY({\n    x: 0,\n    y: 0\n  }));\n  var panResponder = React.useState(function () {\n    return PanResponder.create({\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n        return false;\n      },\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {\n        return true;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n        return true;\n      },\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant(e) {\n        return rKnob.current.setOffset({\n          x: rLastX.current,\n          y: 0\n        });\n      },\n      onPanResponderMove: function onPanResponderMove(_, _ref2) {\n        var dx = _ref2.dx;\n        return rKnob.current.x.setValue(dx);\n      }\n    });\n  });\n  React.useEffect(function () {\n    function handleXChange(value) {\n      rLastX.current = value.value;\n      var next = min + value.value / rWidth.current * (max - min);\n      onChange && onChange(next);\n    }\n\n    var id = rKnob.current.x.addListener(handleXChange);\n    return function () {\n      rKnob.current.x.removeListener(id);\n    };\n  }, []);\n  return React.createElement(View, _extends({\n    style: styles.Container,\n    onLayout: function onLayout(e) {\n      rWidth.current = e.nativeEvent.layout.width - 56;\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), React.createElement(Animated.View, _extends({}, panResponder[0].panHandlers, {\n    style: [styles.Knob, rKnob.current.getLayout(), {\n      top: 0\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  })), React.createElement(Text, {\n    style: styles.Label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, title), React.createElement(Text, {\n    style: styles.Value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, toValue ? toValue(value) : value.toString()));\n}\nvar styles = StyleSheet.create({\n  Content: {\n    justifyContent: \"flex-start\",\n    alignItems: \"center\"\n  },\n  Slider: {\n    position: \"absolute\",\n    width: \"100%\"\n  },\n  Knob: {\n    position: \"absolute\",\n    backgroundColor: \"rgba(255, 255, 255, .1)\",\n    height: 64,\n    width: 56,\n    borderRadius: 12\n  },\n  Value: {\n    color: \"rgba(255, 255, 255, 1)\",\n    fontSize: 16,\n    fontWeight: \"normal\"\n  },\n  Label: {\n    color: \"rgba(255, 255, 255, .5)\",\n    fontSize: 16,\n    fontWeight: \"normal\"\n  },\n  Container: {\n    width: \"100%\",\n    height: 64,\n    backgroundColor: \"#303031\",\n    borderRadius: 12,\n    marginBottom: 8,\n    overflow: \"hidden\",\n    paddingVertical: 14,\n    paddingHorizontal: 16,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/components/slider.tsx"],"names":["React","UserButton","title","value","min","max","step","toValue","onChange","rest","rWidth","useRef","rLastX","rKnob","Animated","ValueXY","x","y","panResponder","useState","PanResponder","create","onPanResponderTerminationRequest","onShouldBlockNativeResponder","onMoveShouldSetPanResponder","onStartShouldSetPanResponder","onPanResponderGrant","e","current","setOffset","onPanResponderMove","_","dx","setValue","useEffect","handleXChange","next","id","addListener","removeListener","styles","Container","nativeEvent","layout","width","panHandlers","Knob","getLayout","top","Label","Value","toString","StyleSheet","Content","justifyContent","alignItems","Slider","position","backgroundColor","height","borderRadius","color","fontSize","fontWeight","marginBottom","overflow","paddingVertical","paddingHorizontal","flexDirection"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport { StyleSheet, Animated, PanResponder, Text, View } from \"react-native\"\nimport { ButtonProps, ContentLeft } from \"./button\"\nimport _Slider from \"@react-native-community/slider\"\nimport * as Types from \"types\"\n\nexport type SliderProps = {\n  title: string\n  value: number\n  min?: number\n  max?: number\n  step?: number\n  toValue?: (value: number) => string\n  onChange: (value: number) => void\n} & ButtonProps\n\nexport default function UserButton({\n  title,\n  value = 0,\n  min = 0,\n  max = 10,\n  step = 1,\n  toValue,\n  onChange,\n  ...rest\n}: SliderProps) {\n  const rWidth = React.useRef(0)\n  const rLastX = React.useRef(0)\n  const rKnob = React.useRef(new Animated.ValueXY({ x: 0, y: 0 }))\n\n  const panResponder = React.useState(() =>\n    PanResponder.create({\n      onPanResponderTerminationRequest: () => false,\n      onShouldBlockNativeResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: (e) =>\n        rKnob.current.setOffset({ x: rLastX.current, y: 0 }),\n      onPanResponderMove: (_, { dx }) => rKnob.current.x.setValue(dx),\n    })\n  )\n\n  React.useEffect(() => {\n    function handleXChange(value: any) {\n      rLastX.current = value.value\n      const next = min + (value.value / rWidth.current) * (max - min)\n      onChange && onChange(next)\n    }\n    const id = rKnob.current.x.addListener(handleXChange)\n    return () => {\n      rKnob.current.x.removeListener(id)\n    }\n  }, [])\n\n  return (\n    <View\n      style={styles.Container}\n      onLayout={(e) => {\n        rWidth.current = e.nativeEvent.layout.width - 56\n      }}\n      {...rest}\n    >\n      <Animated.View\n        {...panResponder[0].panHandlers}\n        style={[styles.Knob, rKnob.current.getLayout(), { top: 0 }]}\n      />\n      <Text style={styles.Label}>{title}</Text>\n      <Text style={styles.Value}>\n        {toValue ? toValue(value) : value.toString()}\n      </Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  Content: {\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n  Slider: {\n    position: \"absolute\",\n    width: \"100%\",\n  },\n  Knob: {\n    position: \"absolute\",\n    backgroundColor: \"rgba(255, 255, 255, .1)\",\n    height: 64,\n    width: 56,\n    borderRadius: 12,\n  },\n  Value: {\n    color: \"rgba(255, 255, 255, 1)\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n  },\n  Label: {\n    color: \"rgba(255, 255, 255, .5)\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n  },\n  Container: {\n    width: \"100%\",\n    height: 64,\n    backgroundColor: \"#303031\",\n    borderRadius: 12,\n    marginBottom: 8,\n    overflow: \"hidden\",\n    paddingVertical: 14,\n    paddingHorizontal: 16,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n})\n"]},"metadata":{},"sourceType":"module"}