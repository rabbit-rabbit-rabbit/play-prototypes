{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/components/panel/header.tsx\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport IconButton from \"../icon-button\";\nexport default function PanelHeader(_ref) {\n  var _this = this;\n\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"Title\" : _ref$title,\n      leftAction = _ref.leftAction,\n      leftButton = _ref.leftButton,\n      leftButton2 = _ref.leftButton2,\n      rightAction = _ref.rightAction,\n      rightButton = _ref.rightButton,\n      rightButton2 = _ref.rightButton2;\n  return React.createElement(Animated.View, {\n    style: [styles.PanelHeader],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.PanelTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, title), leftAction && React.createElement(Pressable, {\n    style: [styles.SecondaryAction],\n    onPress: leftAction.onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.SecondaryAction, {\n      color: leftAction.disabled ? \"rgba(255, 255, 255, .3)\" : \"rgba(255, 255, 255, .5)\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, leftAction.title)), React.createElement(View, {\n    style: styles.Left,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, [leftButton, leftButton2].filter(Boolean).map(function (props, i) {\n    return React.createElement(IconButton, _extends({\n      key: i,\n      style: styles.Icon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }));\n  })), React.createElement(View, {\n    style: styles.Right,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, [rightButton2, rightButton].filter(Boolean).map(function (props, i) {\n    return React.createElement(IconButton, _extends({\n      key: i,\n      style: styles.Icon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }));\n  }), rightAction && React.createElement(Pressable, {\n    style: [styles.Action],\n    onPress: rightAction.onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.Action, {\n      color: rightAction.disabled ? \"rgba(255, 255, 255, .3)\" : \"#00ff9d\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, rightAction.title))));\n}\nvar styles = StyleSheet.create({\n  PanelHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 54\n  },\n  PanelTitle: {\n    color: \"#FFFFFF\",\n    position: \"absolute\",\n    width: \"100%\",\n    textAlign: \"center\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n    fontFamily: \"Helvetica Neue\"\n  },\n  Left: {\n    flexDirection: \"row\",\n    paddingLeft: 6\n  },\n  Right: {\n    flexDirection: \"row\",\n    paddingRight: 6\n  },\n  Icon: {\n    top: -12\n  },\n  SecondaryAction: {\n    fontSize: 16,\n    paddingHorizontal: 8,\n    color: \"rgba(255, 255, 255, .5)\"\n  },\n  Action: {\n    fontSize: 16,\n    paddingHorizontal: 8,\n    color: \"#00ff9d\"\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/components/panel/header.tsx"],"names":["React","IconButton","PanelHeader","title","leftAction","leftButton","leftButton2","rightAction","rightButton","rightButton2","styles","PanelTitle","SecondaryAction","onPress","color","disabled","Left","filter","Boolean","map","props","i","Icon","Right","Action","StyleSheet","create","flexDirection","justifyContent","height","position","width","textAlign","fontSize","fontWeight","fontFamily","paddingLeft","paddingRight","top","paddingHorizontal"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport {\n  StyleSheet,\n  Button,\n  ButtonProps,\n  Text,\n  View,\n  Animated,\n  Pressable,\n  PressableProps,\n} from \"react-native\"\nimport IconButton, { IconButtonProps } from \"../icon-button\"\n\nexport type PanelHeaderProps = {\n  title: string\n  leftAction?: PressableProps & { title: string }\n  leftButton?: IconButtonProps\n  leftButton2?: IconButtonProps\n  rightAction?: PressableProps & { title: string }\n  rightButton?: IconButtonProps\n  rightButton2?: IconButtonProps\n}\n\nexport default function PanelHeader({\n  title = \"Title\",\n  leftAction,\n  leftButton,\n  leftButton2,\n  rightAction,\n  rightButton,\n  rightButton2,\n}: PanelHeaderProps) {\n  // const fadeAnim = React.useRef(new Animated.Value(0)).current\n\n  // const fadeIn = async () => {\n  //   Animated.sequence([\n  //     Animated.timing(fadeAnim, {\n  //       toValue: 0,\n  //       duration: 0,\n  //       useNativeDriver: true,\n  //     }),\n  //     Animated.timing(fadeAnim, {\n  //       toValue: 1,\n  //       duration: 210,\n  //       useNativeDriver: true,\n  //       delay: 100,\n  //     }),\n  //   ]).start()\n  // }\n\n  // React.useEffect(() => {\n  //   fadeIn()\n  // }, [title])\n\n  return (\n    <Animated.View\n      style={[\n        styles.PanelHeader,\n        // {\n        //   opacity: fadeAnim, // Bind opacity to animated value\n        // },\n      ]}\n    >\n      <Text style={styles.PanelTitle}>{title}</Text>\n      {leftAction && (\n        <Pressable\n          style={[styles.SecondaryAction]}\n          onPress={leftAction.onPress}\n        >\n          <Text\n            style={[\n              styles.SecondaryAction,\n              {\n                color: leftAction.disabled\n                  ? \"rgba(255, 255, 255, .3)\"\n                  : \"rgba(255, 255, 255, .5)\",\n              },\n            ]}\n          >\n            {leftAction.title}\n          </Text>\n        </Pressable>\n      )}\n      <View style={styles.Left}>\n        {[leftButton, leftButton2].filter(Boolean).map((props, i) => (\n          <IconButton key={i} style={styles.Icon} {...props} />\n        ))}\n      </View>\n      <View style={styles.Right}>\n        {[rightButton2, rightButton].filter(Boolean).map((props, i) => (\n          <IconButton key={i} style={styles.Icon} {...props} />\n        ))}\n        {rightAction && (\n          <Pressable style={[styles.Action]} onPress={rightAction.onPress}>\n            <Text\n              style={[\n                styles.Action,\n                {\n                  color: rightAction.disabled\n                    ? \"rgba(255, 255, 255, .3)\"\n                    : \"#00ff9d\",\n                },\n              ]}\n            >\n              {rightAction.title}\n            </Text>\n          </Pressable>\n        )}\n      </View>\n    </Animated.View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  PanelHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 54,\n  },\n  PanelTitle: {\n    color: \"#FFFFFF\",\n    position: \"absolute\",\n    width: \"100%\",\n    textAlign: \"center\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n    fontFamily: \"Helvetica Neue\",\n  },\n  Left: {\n    flexDirection: \"row\",\n    paddingLeft: 6,\n  },\n  Right: {\n    flexDirection: \"row\",\n    paddingRight: 6,\n  },\n  Icon: {\n    top: -12,\n  },\n  SecondaryAction: {\n    fontSize: 16,\n    paddingHorizontal: 8,\n    color: \"rgba(255, 255, 255, .5)\",\n  },\n  Action: {\n    fontSize: 16,\n    paddingHorizontal: 8,\n    color: \"#00ff9d\",\n  },\n})\n"]},"metadata":{},"sourceType":"module"}