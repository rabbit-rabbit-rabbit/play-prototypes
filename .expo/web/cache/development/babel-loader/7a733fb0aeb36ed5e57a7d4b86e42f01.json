{"ast":null,"code":"var _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/components/panel/container.tsx\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SwipeablePanel } from \"./core\";\nimport usePanelStack from \"../../hooks/usePanelStack\";\nvar id = 0;\nexport default function Container(_ref) {\n  var id = _ref.id,\n      isOpen = _ref.isOpen,\n      stayOpen = _ref.stayOpen,\n      onClose = _ref.onClose,\n      onCloseAttempt = _ref.onCloseAttempt,\n      style = _ref.style,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,\n      children = _ref.children;\n\n  var _usePanelStack = usePanelStack(id, isOpen),\n      z = _usePanelStack.zIndex,\n      isTopPanel = _usePanelStack.isTopPanel;\n\n  return React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      bottom: 0,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    pointerEvents: isOpen ? \"auto\" : \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(SwipeablePanel, {\n    isActive: isOpen,\n    stayOpen: stayOpen,\n    onClose: onClose,\n    onCloseAttempt: onCloseAttempt,\n    style: [styles.Panel, style],\n    barStyle: styles.PanelBar,\n    showScrim: isTopPanel,\n    onlyLarge: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, children));\n}\nvar styles = StyleSheet.create({\n  Panel: {\n    backgroundColor: \"#19191B\"\n  },\n  PanelBar: {\n    backgroundColor: \"#303032\"\n  },\n  PanelHeader: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: 54\n  },\n  PanelTitle: {\n    color: \"#FFFFFF\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    width: \"100%\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n    fontFamily: \"Helvetica Neue\"\n  },\n  LeftIcon: {\n    position: \"absolute\",\n    left: 8,\n    top: -12\n  },\n  RightIcon: {\n    position: \"absolute\",\n    right: 8,\n    top: -12\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/components/panel/container.tsx"],"names":["React","SwipeablePanel","usePanelStack","id","Container","isOpen","stayOpen","onClose","onCloseAttempt","style","zIndex","children","z","isTopPanel","position","bottom","width","height","styles","Panel","PanelBar","StyleSheet","create","backgroundColor","PanelHeader","flex","flexDirection","PanelTitle","color","textAlign","fontSize","fontWeight","fontFamily","LeftIcon","left","top","RightIcon","right"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,cAAT;AAEA,OAAOC,aAAP;AAaA,IAAIC,EAAE,GAAG,CAAT;AAEA,eAAe,SAASC,SAAT,OASS;AAAA,MARtBD,EAQsB,QARtBA,EAQsB;AAAA,MAPtBE,MAOsB,QAPtBA,MAOsB;AAAA,MANtBC,QAMsB,QANtBA,QAMsB;AAAA,MALtBC,OAKsB,QALtBA,OAKsB;AAAA,MAJtBC,cAIsB,QAJtBA,cAIsB;AAAA,MAHtBC,KAGsB,QAHtBA,KAGsB;AAAA,yBAFtBC,MAEsB;AAAA,MAFtBA,MAEsB,4BAFb,CAEa;AAAA,MADtBC,QACsB,QADtBA,QACsB;;AAAA,uBACYT,aAAa,CAACC,EAAD,EAAKE,MAAL,CADzB;AAAA,MACNO,CADM,kBACdF,MADc;AAAA,MACHG,UADG,kBACHA,UADG;;AAGtB,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAELC,MAAAA,QAAQ,EAAE,UAFL;AAGLC,MAAAA,MAAM,EAAE,CAHH;AAILC,MAAAA,KAAK,EAAE,MAJF;AAKLC,MAAAA,MAAM,EAAE;AALH,KADT;AAQE,IAAA,aAAa,EAAEZ,MAAM,GAAG,MAAH,GAAY,MARnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAEA,MADZ;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,cAAc,EAAEC,cAJlB;AAKE,IAAA,KAAK,EAAE,CAACU,MAAM,CAACC,KAAR,EAAeV,KAAf,CALT;AAME,IAAA,QAAQ,EAAES,MAAM,CAACE,QANnB;AAOE,IAAA,SAAS,EAAEP,UAPb;AAQE,IAAA,SAAS,MARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGF,QAVH,CAVF,CADF;AAyBD;AAED,IAAMO,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,KAAK,EAAE;AACLI,IAAAA,eAAe,EAAE;AADZ,GADwB;AAI/BH,EAAAA,QAAQ,EAAE;AACRG,IAAAA,eAAe,EAAE;AADT,GAJqB;AAO/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,aAAa,EAAE,KAFJ;AAGXT,IAAAA,MAAM,EAAE;AAHG,GAPkB;AAY/BU,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,SADG;AAEVC,IAAAA,SAAS,EAAE,QAFD;AAGVf,IAAAA,QAAQ,EAAE,UAHA;AAIVE,IAAAA,KAAK,EAAE,MAJG;AAKVc,IAAAA,QAAQ,EAAE,EALA;AAMVC,IAAAA,UAAU,EAAE,QANF;AAOVC,IAAAA,UAAU,EAAE;AAPF,GAZmB;AAqB/BC,EAAAA,QAAQ,EAAE;AACRnB,IAAAA,QAAQ,EAAE,UADF;AAERoB,IAAAA,IAAI,EAAE,CAFE;AAGRC,IAAAA,GAAG,EAAE,CAAC;AAHE,GArBqB;AA0B/BC,EAAAA,SAAS,EAAE;AACTtB,IAAAA,QAAQ,EAAE,UADD;AAETuB,IAAAA,KAAK,EAAE,CAFE;AAGTF,IAAAA,GAAG,EAAE,CAAC;AAHG;AA1BoB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\"\nimport { StyleSheet, ViewStyle, View } from \"react-native\"\nimport { SwipeablePanel } from \"./core\"\n\nimport usePanelStack from \"@hooks/usePanelStack\"\n\nexport type PanelContainerProps = {\n  id: string\n  isOpen: boolean\n  zIndex?: number\n  stayOpen?: boolean\n  onClose?: () => void\n  onCloseAttempt?: () => void\n  children?: React.ReactNode\n  style?: ViewStyle\n}\n\nlet id = 0\n\nexport default function Container({\n  id,\n  isOpen,\n  stayOpen,\n  onClose,\n  onCloseAttempt,\n  style,\n  zIndex = 1,\n  children,\n}: PanelContainerProps) {\n  const { zIndex: z, isTopPanel } = usePanelStack(id, isOpen)\n\n  return (\n    <View\n      style={{\n        // zIndex,\n        position: \"absolute\",\n        bottom: 0,\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      pointerEvents={isOpen ? \"auto\" : \"none\"}\n    >\n      <SwipeablePanel\n        isActive={isOpen}\n        stayOpen={stayOpen}\n        onClose={onClose}\n        onCloseAttempt={onCloseAttempt}\n        style={[styles.Panel, style]}\n        barStyle={styles.PanelBar}\n        showScrim={isTopPanel}\n        onlyLarge\n      >\n        {children}\n      </SwipeablePanel>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  Panel: {\n    backgroundColor: \"#19191B\",\n  },\n  PanelBar: {\n    backgroundColor: \"#303032\",\n  },\n  PanelHeader: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: 54,\n  },\n  PanelTitle: {\n    color: \"#FFFFFF\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    width: \"100%\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n    fontFamily: \"Helvetica Neue\",\n  },\n  LeftIcon: {\n    position: \"absolute\",\n    left: 8,\n    top: -12,\n  },\n  RightIcon: {\n    position: \"absolute\",\n    right: 8,\n    top: -12,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}