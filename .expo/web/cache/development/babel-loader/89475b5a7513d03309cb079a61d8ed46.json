{"ast":null,"code":"import padStart from \"lodash/padStart\";\nexport function assert(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\nexport function secondsToTimestamp(s) {\n  var min = Math.floor(s / 60 << 0).toString();\n  var sec = Math.floor(s % 60).toString();\n  return padStart(min, 2, \"0\") + \":\" + padStart(sec, 2, \"0\");\n}","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/utils.ts"],"names":["padStart","assert","value","message","Error","secondsToTimestamp","s","min","Math","floor","toString","sec"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iBAArB;AAOA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAA4BC,OAA5B,EAA8C;AACnD,MAAID,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,IAA7B,IAAqC,OAAOA,KAAP,KAAiB,WAA1D,EAAuE;AACrE,UAAM,IAAIE,KAAJ,CAAUD,OAAO,IAAI,kBAArB,CAAN;AACD;AACF;AAED,OAAO,SAASE,kBAAT,CAA4BC,CAA5B,EAAuC;AAC5C,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAYH,CAAC,GAAG,EAAL,IAAY,CAAvB,EAA0BI,QAA1B,EAAZ;AACA,MAAMC,GAAG,GAAGH,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,EAAf,EAAmBI,QAAnB,EAAZ;AACA,SAAUV,QAAQ,CAACO,GAAD,EAAM,CAAN,EAAS,GAAT,CAAlB,SAAmCP,QAAQ,CAACW,GAAD,EAAM,CAAN,EAAS,GAAT,CAA3C;AACD","sourcesContent":["import padStart from \"lodash/padStart\"\n\nexport function assert(value: boolean, message?: string): asserts value\nexport function assert<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T\nexport function assert(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message || \"Assertion failed\")\n  }\n}\n\nexport function secondsToTimestamp(s: number) {\n  const min = Math.floor((s / 60) << 0).toString()\n  const sec = Math.floor(s % 60).toString()\n  return `${padStart(min, 2, \"0\")}:${padStart(sec, 2, \"0\")}`\n}\n"]},"metadata":{},"sourceType":"module"}