{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/screens/draft-pages/goals.tsx\";\nimport * as React from \"react\";\nimport { Spacers } from \"../../components/styled\";\nimport IconButton from \"../../components/icon-button\";\nimport ContinueButton from \"../../components/continue-button\";\nimport JourneyDetail from \"../../components/journey-detail\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport _Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { send } from \"../../hooks/useAppState\";\nimport { Text } from \"../../components/styled\";\nimport styles from \"../styles\";\nexport default function GoalsPage(_ref) {\n  var _this = this;\n\n  var test = _ref.test;\n  return React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.Content,\n    contentContainerStyle: styles.ScrollingContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(_Text, {\n    style: styles.Instruction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Set Goals to tell the user what they should do to complete the test.\"), React.createElement(Spacers.XL, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), test.goals.filter(function (g) {\n    return g.saved;\n  }).map(function (goal, i) {\n    return React.createElement(TestGoal, {\n      key: goal.id,\n      goal: goal,\n      index: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    });\n  }), test.goals.length > 0 && React.createElement(Spacers.S, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  }), React.createElement(View, {\n    style: localStyles.Centered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, React.createElement(IconButton, {\n    icon: \"plus-circle\",\n    color: \"#fff\",\n    size: 32,\n    onPress: function onPress() {\n      return send(\"STARTED_CREATING_GOAL\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })))), React.createElement(View, {\n    style: styles.Footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, test.goals.length === 0 && React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(Text.Instruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"You need at least one goal to continue\"), React.createElement(Spacers.M, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), React.createElement(ContinueButton, {\n    title: \"Next\",\n    onPress: function onPress() {\n      return send(\"CONTINUED\");\n    },\n    disabled: test.goals.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction TestGoal(_ref2) {\n  var goal = _ref2.goal,\n      index = _ref2.index;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: localStyles.GoalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: localStyles.GoalHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(IconButton, {\n    icon: expanded ? \"chevron-down\" : \"chevron-up\",\n    color: \"#fff\",\n    onPress: function onPress() {\n      return setExpanded(function (expanded) {\n        return !expanded;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(_Text, {\n    style: localStyles.GoalTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Goal \", index), React.createElement(IconButton, {\n    icon: \"more-horizontal\",\n    color: \"#fff\",\n    onPress: function onPress() {\n      return send(\"OPENED_GOAL_DIALOG\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), expanded && React.createElement(View, {\n    style: localStyles.GoalBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(Text.Instruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, goal.description), goal.journey && React.createElement(React.Fragment, null, React.createElement(Spacers.S, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: localStyles.JourneyContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, React.createElement(_Text, {\n    style: localStyles.JourneyLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Expected Journey\"), React.createElement(JourneyDetail, {\n    goal: goal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })))));\n}\n\nvar localStyles = StyleSheet.create({\n  Centered: {\n    alignItems: \"center\"\n  },\n  GoalTitle: {\n    color: \"#fff\"\n  },\n  GoalContainer: {\n    width: \"100%\",\n    backgroundColor: \"rgba(255, 255, 255, .1)\",\n    borderRadius: 8,\n    marginBottom: 8,\n    overflow: \"hidden\"\n  },\n  GoalBody: {\n    paddingHorizontal: 16,\n    paddingVertical: 16\n  },\n  GoalHeader: {\n    height: 44,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    textAlign: \"center\",\n    width: \"100%\",\n    backgroundColor: \"rgba(255,255, 255, .1)\",\n    flexDirection: \"row\"\n  },\n  JourneyLabel: {\n    fontSize: 13,\n    color: \"#fff\",\n    fontWeight: \"500\"\n  },\n  JourneyContainer: {\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"rgba(255, 255, 255, .1)\",\n    borderRadius: 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    justifyContent: \"space-between\"\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/screens/draft-pages/goals.tsx"],"names":["React","Spacers","IconButton","ContinueButton","JourneyDetail","send","Text","styles","GoalsPage","test","Content","ScrollingContent","Instruction","goals","filter","g","saved","map","goal","i","id","length","localStyles","Centered","Footer","TestGoal","index","useState","expanded","setExpanded","GoalContainer","GoalHeader","GoalTitle","GoalBody","description","journey","JourneyContainer","JourneyLabel","StyleSheet","create","alignItems","color","width","backgroundColor","borderRadius","marginBottom","overflow","paddingHorizontal","paddingVertical","height","justifyContent","textAlign","flexDirection","fontSize","fontWeight","borderWidth","borderStyle","borderColor"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport Input from \"@components/input\"\nimport { Spacers } from \"@components/styled\"\nimport SectionTitle from \"@components/section-title\"\nimport Switch from \"@components/switch\"\nimport IconButton from \"@components/icon-button\"\nimport ContinueButton from \"@components/continue-button\"\nimport JourneyDetail from \"@components/journey-detail\"\nimport { StyleSheet, ScrollView, Text as _Text, View } from \"react-native\"\nimport useAppState, { send } from \"@hooks/useAppState\"\nimport * as Types from \"types\"\nimport { Views, Text } from \"@components/styled\"\nimport styles from \"../styles\"\n\nexport default function GoalsPage({ test }: { test: Types.UserTest }) {\n  return (\n    <React.Fragment>\n      <ScrollView\n        style={styles.Content}\n        contentContainerStyle={styles.ScrollingContent}\n      >\n        <>\n          <_Text style={styles.Instruction}>\n            Set Goals to tell the user what they should do to complete the test.\n          </_Text>\n          <Spacers.XL />\n          {test.goals\n            .filter((g) => g.saved)\n            .map((goal, i) => (\n              <TestGoal key={goal.id} goal={goal} index={i} />\n            ))}\n          {test.goals.length > 0 && <Spacers.S />}\n          <View style={localStyles.Centered}>\n            <IconButton\n              icon=\"plus-circle\"\n              color=\"#fff\"\n              size={32}\n              onPress={() => send(\"STARTED_CREATING_GOAL\")}\n            />\n          </View>\n        </>\n      </ScrollView>\n      <View style={styles.Footer}>\n        {test.goals.length === 0 && (\n          <React.Fragment>\n            <Text.Instruction>\n              You need at least one goal to continue\n            </Text.Instruction>\n            <Spacers.M />\n          </React.Fragment>\n        )}\n        <ContinueButton\n          title=\"Next\"\n          onPress={() => send(\"CONTINUED\")}\n          disabled={test.goals.length === 0}\n        />\n      </View>\n    </React.Fragment>\n  )\n}\n\nfunction TestGoal({ goal, index }: { goal: Types.TestGoal; index: number }) {\n  const [expanded, setExpanded] = React.useState(true)\n\n  return (\n    <View style={localStyles.GoalContainer}>\n      <View style={localStyles.GoalHeader}>\n        <IconButton\n          icon={expanded ? \"chevron-down\" : \"chevron-up\"}\n          color=\"#fff\"\n          onPress={() => setExpanded((expanded) => !expanded)}\n        />\n        <_Text style={localStyles.GoalTitle}>Goal {index}</_Text>\n        <IconButton\n          icon=\"more-horizontal\"\n          color=\"#fff\"\n          onPress={() => send(\"OPENED_GOAL_DIALOG\")}\n        />\n      </View>\n      {expanded && (\n        <View style={localStyles.GoalBody}>\n          <Text.Instruction>{goal.description}</Text.Instruction>\n\n          {goal.journey && (\n            <>\n              <Spacers.S />\n              <View style={localStyles.JourneyContainer}>\n                <_Text style={localStyles.JourneyLabel}>Expected Journey</_Text>\n                <JourneyDetail goal={goal} />\n              </View>\n            </>\n          )}\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst localStyles = StyleSheet.create({\n  Centered: {\n    alignItems: \"center\",\n  },\n  GoalTitle: {\n    color: \"#fff\",\n  },\n  GoalContainer: {\n    width: \"100%\",\n    backgroundColor: \"rgba(255, 255, 255, .1)\",\n    borderRadius: 8,\n    marginBottom: 8,\n    overflow: \"hidden\",\n  },\n  GoalBody: {\n    paddingHorizontal: 16,\n    paddingVertical: 16,\n  },\n  GoalHeader: {\n    height: 44,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    textAlign: \"center\",\n    width: \"100%\",\n    backgroundColor: \"rgba(255,255, 255, .1)\",\n    flexDirection: \"row\",\n  },\n  JourneyLabel: {\n    fontSize: 13,\n    color: \"#fff\",\n    fontWeight: \"500\",\n  },\n  JourneyContainer: {\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"rgba(255, 255, 255, .1)\",\n    borderRadius: 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    justifyContent: \"space-between\",\n  },\n})\n"]},"metadata":{},"sourceType":"module"}