{"ast":null,"code":"export var maxDuration = 1000 * 60 * 24 * 5;\nexport var allUsers = [{\n  id: \"user0\",\n  name: \"Steve\",\n  email: \"steve@aol.com\"\n}, {\n  id: \"user1\",\n  name: \"Joon Park\",\n  email: \"joon@createwithplay.com\"\n}, {\n  id: \"user2\",\n  name: \"Deagle\",\n  email: \"deagle@createwithplay.com\"\n}, {\n  id: \"user3\",\n  name: \"Timo\",\n  email: \"timo@createwithplay.com\"\n}, {\n  id: \"user4\",\n  name: \"Tom\",\n  email: \"tom@createwithplay.com\"\n}];\nexport function getNewTest() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$name = options.name,\n      name = _options$name === void 0 ? \"New Test\" : _options$name,\n      _options$status = options.status,\n      status = _options$status === void 0 ? \"draft\" : _options$status,\n      _options$users = options.users,\n      users = _options$users === void 0 ? 0 : _options$users,\n      _options$progress = options.progress,\n      progress = _options$progress === void 0 ? 0 : _options$progress;\n  return {\n    id: \"test\" + Math.floor(Math.random() * 999999),\n    name: name,\n    invitedUsers: allUsers.slice(0, users),\n    timeRemaining: maxDuration * (1 - progress),\n    status: status,\n    lastPage: 0,\n    options: {\n      testDuration: maxDuration,\n      allowMultipleTries: false,\n      data: {\n        frontFacingCamera: true,\n        microphone: true,\n        location: true\n      }\n    },\n    survey: [],\n    goals: []\n  };\n}\nexport var tests = [getNewTest({\n  name: \"Header Test A\",\n  status: \"inProgress\",\n  users: 3,\n  progress: 0.32\n}), getNewTest({\n  name: \"Header Test B\",\n  status: \"inProgress\",\n  users: 3,\n  progress: 0\n}), getNewTest({\n  name: \"Toolbar Test\",\n  status: \"draft\",\n  users: 0,\n  progress: 0\n}), getNewTest({\n  name: \"New Menu\",\n  status: \"complete\",\n  users: 1,\n  progress: 1\n}), getNewTest({\n  name: \"Sidebar Shuffle\",\n  status: \"inProgress\",\n  users: 2,\n  progress: 1\n})];","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/static.ts"],"names":["maxDuration","allUsers","id","name","email","getNewTest","options","status","users","progress","Math","floor","random","invitedUsers","slice","timeRemaining","lastPage","testDuration","allowMultipleTries","data","frontFacingCamera","microphone","location","survey","goals","tests"],"mappings":"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","sourcesContent":["import * as Types from \"./types\"\n\nexport const maxDuration = 1000 * 60 * 24 * 5\n\nexport const allUsers = [\n  {\n    id: \"user0\",\n    name: \"Steve\",\n    email: \"steve@aol.com\",\n  },\n  {\n    id: \"user1\",\n    name: \"Joon Park\",\n    email: \"joon@createwithplay.com\",\n  },\n  {\n    id: \"user2\",\n    name: \"Deagle\",\n    email: \"deagle@createwithplay.com\",\n  },\n  {\n    id: \"user3\",\n    name: \"Timo\",\n    email: \"timo@createwithplay.com\",\n  },\n  {\n    id: \"user4\",\n    name: \"Tom\",\n    email: \"tom@createwithplay.com\",\n  },\n]\n\ntype TestOptions = {\n  name?: string\n  status?: Types.TestStatus\n  users?: number\n  progress?: number\n}\n\nexport function getNewTest(options: TestOptions = {}) {\n  const {\n    name = \"New Test\",\n    status = \"draft\",\n    users = 0,\n    progress = 0,\n  } = options\n  return {\n    id: \"test\" + Math.floor(Math.random() * 999999),\n    name,\n    invitedUsers: allUsers.slice(0, users),\n    timeRemaining: maxDuration * (1 - progress),\n    status,\n    lastPage: 0,\n    options: {\n      testDuration: maxDuration,\n      allowMultipleTries: false,\n      data: {\n        frontFacingCamera: true,\n        microphone: true,\n        location: true,\n      },\n    },\n    survey: [],\n    goals: [],\n  }\n}\n\nexport const tests: Types.UserTest[] = [\n  getNewTest({\n    name: \"Header Test A\",\n    status: \"inProgress\",\n    users: 3,\n    progress: 0.32,\n  }),\n  getNewTest({\n    name: \"Header Test B\",\n    status: \"inProgress\",\n    users: 3,\n    progress: 0,\n  }),\n  getNewTest({ name: \"Toolbar Test\", status: \"draft\", users: 0, progress: 0 }),\n  getNewTest({ name: \"New Menu\", status: \"complete\", users: 1, progress: 1 }),\n  getNewTest({\n    name: \"Sidebar Shuffle\",\n    status: \"inProgress\",\n    users: 2,\n    progress: 1,\n  }),\n]\n"]},"metadata":{},"sourceType":"module"}