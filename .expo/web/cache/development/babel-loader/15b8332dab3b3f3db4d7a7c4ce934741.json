{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/node_modules/react-native-dialog/src/Input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar DialogInput = function DialogInput(props) {\n  var label = props.label,\n      style = props.style,\n      wrapperStyle = props.wrapperStyle,\n      textInputRef = props.textInputRef,\n      multiline = props.multiline,\n      numberOfLines = props.numberOfLines,\n      nodeProps = _objectWithoutProperties(props, [\"label\", \"style\", \"wrapperStyle\", \"textInputRef\", \"multiline\", \"numberOfLines\"]);\n\n  var lines = multiline && numberOfLines || 1;\n  var height = 18 + Platform.select({\n    ios: 14,\n    android: 22\n  }) * lines;\n  return React.createElement(View, {\n    style: [styles.textInputWrapper, wrapperStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, label && React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, label), React.createElement(TextInput, _extends({\n    ref: textInputRef,\n    style: [styles.textInput, style, {\n      height: height\n    }],\n    multiline: multiline,\n    numberOfLines: numberOfLines\n  }, nodeProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  })));\n};\n\nDialogInput.propTypes = _objectSpread(_objectSpread({}, TextInput.propTypes), {}, {\n  label: PropTypes.string,\n  style: PropTypes.any,\n  textInputRef: PropTypes.any,\n  wrapperStyle: PropTypes.any,\n  numberOfLines: PropTypes.number,\n  multiline: PropTypes.bool\n});\nDialogInput.displayName = \"DialogInput\";\nvar styles = StyleSheet.create({\n  textInputWrapper: Platform.select({\n    ios: {\n      backgroundColor: \"white\",\n      borderWidth: StyleSheet.hairlineWidth,\n      borderRadius: 6,\n      borderColor: \"#A9ADAE\",\n      marginHorizontal: 20,\n      marginBottom: 20,\n      paddingHorizontal: 8\n    },\n    android: {\n      marginHorizontal: 10,\n      marginBottom: 20\n    }\n  }),\n  label: Platform.select({\n    ios: {},\n    android: {\n      color: \"rgba(0, 0, 0, 0.5)\",\n      fontSize: 14\n    }\n  }),\n  textInput: Platform.select({\n    ios: {},\n    android: {\n      marginLeft: -4,\n      paddingLeft: 4\n    }\n  })\n});\nexport default DialogInput;","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/node_modules/react-native-dialog/src/Input.js"],"names":["PropTypes","React","DialogInput","props","label","style","wrapperStyle","textInputRef","multiline","numberOfLines","nodeProps","lines","height","Platform","select","ios","android","styles","textInputWrapper","textInput","propTypes","TextInput","string","any","number","bool","displayName","StyleSheet","create","backgroundColor","borderWidth","hairlineWidth","borderRadius","borderColor","marginHorizontal","marginBottom","paddingHorizontal","color","fontSize","marginLeft","paddingLeft"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Platform, StyleSheet, Text, TextInput, View } from \"react-native\";\n\nconst DialogInput = (props) => {\n  const {\n    label,\n    style,\n    wrapperStyle,\n    textInputRef,\n    multiline,\n    numberOfLines,\n    ...nodeProps\n  } = props;\n  const lines = (multiline && numberOfLines) || 1;\n  const height = 18 + Platform.select({ ios: 14, android: 22 }) * lines;\n  return (\n    <View style={[styles.textInputWrapper, wrapperStyle]}>\n      {label && <Text style={styles.label}>{label}</Text>}\n      <TextInput\n        ref={textInputRef}\n        style={[styles.textInput, style, { height }]}\n        multiline={multiline}\n        numberOfLines={numberOfLines}\n        {...nodeProps}\n      />\n    </View>\n  );\n};\n\nDialogInput.propTypes = {\n  ...TextInput.propTypes,\n  label: PropTypes.string,\n  style: PropTypes.any,\n  textInputRef: PropTypes.any,\n  wrapperStyle: PropTypes.any,\n  numberOfLines: PropTypes.number,\n  multiline: PropTypes.bool,\n};\n\nDialogInput.displayName = \"DialogInput\";\n\nconst styles = StyleSheet.create({\n  textInputWrapper: Platform.select({\n    ios: {\n      backgroundColor: \"white\",\n      borderWidth: StyleSheet.hairlineWidth,\n      borderRadius: 6,\n      borderColor: \"#A9ADAE\",\n      marginHorizontal: 20,\n      marginBottom: 20,\n      paddingHorizontal: 8,\n    },\n    android: {\n      marginHorizontal: 10,\n      marginBottom: 20,\n    },\n  }),\n  label: Platform.select({\n    ios: {},\n    android: {\n      color: \"rgba(0, 0, 0, 0.5)\",\n      fontSize: 14,\n    },\n  }),\n  textInput: Platform.select({\n    ios: {},\n    android: {\n      marginLeft: -4,\n      paddingLeft: 4,\n    },\n  }),\n});\n\nexport default DialogInput;\n"]},"metadata":{},"sourceType":"module"}