{"ast":null,"code":"var _jsxFileName = \"/Users/steveruiz/GitHub/play-rn-prototype/src/screens/user-tests.tsx\";\nimport * as React from \"react\";\nimport * as Panel from \"../components/panel\";\nimport TestButton from \"../components/test-button\";\nimport { Spacers } from \"../components/styled\";\nimport SectionTitle from \"../components/section-title\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useAppState, { send } from \"../hooks/useAppState\";\nimport CreateDraftDialog from \"./dialogs/create-draft-dialog\";\nimport PublishTestDialog from \"./dialogs/publish-draft-dialog\";\nimport InvitedUserDialog from \"./dialogs/invited-user-dialog\";\nimport RecordJourneyDialog from \"./dialogs/record-journey-dialog\";\nimport DraftTestDialog from \"./dialogs/draft-test-dialog\";\nimport RecordingJourney from \"./recording-journey\";\nimport JourneyDialog from \"./dialogs/journey-dialog\";\nimport GoalDialog from \"./dialogs/goal-dialog\";\nimport CloseGoalDialog from \"./dialogs/close-goal-dialog\";\nimport Reordering from \"./reordering\";\nexport default function UserTestsScreen() {\n  var local = useAppState();\n  var tests = local.data.tests;\n  var inProgress = tests.filter(function (test) {\n    return test.status === \"inProgress\";\n  });\n  var drafts = tests.filter(function (test) {\n    return test.status === \"draft\";\n  });\n  var complete = tests.filter(function (test) {\n    return test.status === \"complete\";\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Panel.Container, {\n    id: \"userTests\",\n    isOpen: true,\n    stayOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Panel.Header, {\n    title: \"User Tests\",\n    leftButton: {\n      icon: \"more-horizontal\",\n      onPress: function onPress() {}\n    },\n    rightButton: {\n      icon: \"plus\",\n      onPress: function onPress() {\n        return send(\"CREATED_DRAFT\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(TestListSection, {\n    title: \"Drafts\",\n    tests: drafts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), React.createElement(TestListSection, {\n    title: \"In Progress\",\n    tests: inProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(TestListSection, {\n    title: \"Complete\",\n    tests: complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })))), React.createElement(CreateDraftDialog, {\n    visible: local.isIn(\"creatingDraftDialog\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(DraftTestDialog, {\n    visible: local.isIn(\"draftTestDialog\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(InvitedUserDialog, {\n    visible: local.isIn(\"invitedUserDialog\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(PublishTestDialog, {\n    visible: local.isIn(\"publishDialog\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(RecordJourneyDialog, {\n    visible: local.isIn(\"recordJourneyDialog\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(JourneyDialog, {\n    visible: local.isIn(\"journeyDialog\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(CloseGoalDialog, {\n    visible: local.isIn(\"closeGoalDialog\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(GoalDialog, {\n    visible: local.isIn(\"goalDialog\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), local.isIn(\"recordingJourney\") && React.createElement(RecordingJourney, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 42\n    }\n  }), local.isIn(\"reorderingGoals\") && React.createElement(Reordering, {\n    items: local.values.selectedTest.goals.map(function (goal) {\n      return {\n        id: goal.id,\n        title: goal.description\n      };\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction TestListSection(_ref) {\n  var _this = this;\n\n  var title = _ref.title,\n      tests = _ref.tests;\n  if (tests.length === 0) return null;\n  return React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, title), tests.map(function (test) {\n    return React.createElement(TestButton, {\n      key: test.id,\n      test: test,\n      onPress: function onPress() {\n        return send(\"SELECTED_TEST\", {\n          test: test\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    });\n  }), React.createElement(Spacers.M, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  Content: {\n    paddingHorizontal: 16\n  }\n});","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/src/screens/user-tests.tsx"],"names":["React","Panel","TestButton","Spacers","SectionTitle","useAppState","send","CreateDraftDialog","PublishTestDialog","InvitedUserDialog","RecordJourneyDialog","DraftTestDialog","RecordingJourney","JourneyDialog","GoalDialog","CloseGoalDialog","Reordering","UserTestsScreen","local","tests","data","inProgress","filter","test","status","drafts","complete","icon","onPress","styles","Content","isIn","values","selectedTest","goals","map","goal","id","title","description","TestListSection","length","StyleSheet","create","paddingHorizontal"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport * as Panel from \"@components/panel\"\nimport TestButton from \"@components/test-button\"\nimport UserButton from \"@components/user-button\"\nimport Input from \"@components/input\"\nimport usePanelStack from \"@hooks/usePanelStack\"\nimport { Spacers } from \"@components/styled\"\nimport SectionTitle from \"@components/section-title\"\nimport CopyLinkButton from \"@components/copy-link-button\"\nimport { StyleSheet, ScrollView, View, FlatList, Text } from \"react-native\"\nimport * as Types from \"types\"\nimport useAppState, { send } from \"@hooks/useAppState\"\nimport CreateDraftDialog from \"./dialogs/create-draft-dialog\"\nimport PublishTestDialog from \"./dialogs/publish-draft-dialog\"\nimport InvitedUserDialog from \"./dialogs/invited-user-dialog\"\nimport RecordJourneyDialog from \"./dialogs/record-journey-dialog\"\nimport DraftTestDialog from \"./dialogs/draft-test-dialog\"\nimport RecordingJourney from \"./recording-journey\"\nimport CreateGoalPanel from \"./create-goal\"\nimport FindUserPanel from \"./find-user\"\nimport JourneyDialog from \"./dialogs/journey-dialog\"\nimport GoalDialog from \"./dialogs/goal-dialog\"\nimport CloseGoalDialog from \"./dialogs/close-goal-dialog\"\nimport Reordering from \"./reordering\"\n\nexport default function UserTestsScreen() {\n  const local = useAppState()\n\n  const { tests } = local.data\n  const inProgress = tests.filter((test) => test.status === \"inProgress\")\n  const drafts = tests.filter((test) => test.status === \"draft\")\n  const complete = tests.filter((test) => test.status === \"complete\")\n\n  return (\n    <>\n      <Panel.Container id=\"userTests\" isOpen={true} stayOpen={true}>\n        <Panel.Header\n          title=\"User Tests\"\n          leftButton={{\n            icon: \"more-horizontal\",\n            onPress: () => {},\n          }}\n          rightButton={{\n            icon: \"plus\",\n            onPress: () => send(\"CREATED_DRAFT\"),\n          }}\n        />\n        <ScrollView style={styles.Content}>\n          <React.Fragment>\n            <TestListSection title=\"Drafts\" tests={drafts} />\n            <TestListSection title=\"In Progress\" tests={inProgress} />\n            <TestListSection title=\"Complete\" tests={complete} />\n          </React.Fragment>\n        </ScrollView>\n      </Panel.Container>\n\n      <CreateDraftDialog visible={local.isIn(\"creatingDraftDialog\")} />\n      <DraftTestDialog visible={local.isIn(\"draftTestDialog\")} />\n      <InvitedUserDialog visible={local.isIn(\"invitedUserDialog\")} />\n      <PublishTestDialog visible={local.isIn(\"publishDialog\")} />\n      <RecordJourneyDialog visible={local.isIn(\"recordJourneyDialog\")} />\n      <JourneyDialog visible={local.isIn(\"journeyDialog\")} />\n      <CloseGoalDialog visible={local.isIn(\"closeGoalDialog\")} />\n      <GoalDialog visible={local.isIn(\"goalDialog\")} />\n      {local.isIn(\"recordingJourney\") && <RecordingJourney />}\n      {local.isIn(\"reorderingGoals\") && (\n        <Reordering\n          items={local.values.selectedTest.goals.map(\n            (goal: Types.TestGoal) => ({\n              id: goal.id,\n              title: goal.description,\n            })\n          )}\n        />\n      )}\n    </>\n  )\n}\n\n// Test List Content\n\nfunction TestListSection({\n  title,\n  tests,\n}: {\n  title: string\n  tests: Types.UserTest[]\n}) {\n  if (tests.length === 0) return null\n\n  return (\n    <React.Fragment>\n      <SectionTitle>{title}</SectionTitle>\n      {tests.map((test) => (\n        <TestButton\n          key={test.id}\n          test={test}\n          onPress={() => send(\"SELECTED_TEST\", { test })}\n        />\n      ))}\n      <Spacers.M />\n    </React.Fragment>\n  )\n}\n\nconst styles = StyleSheet.create({\n  Content: {\n    paddingHorizontal: 16,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}