{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_native_reanimated_1 = __importDefault(require(\"react-native-reanimated\"));\n\nvar or = react_native_reanimated_1.default.or,\n    set = react_native_reanimated_1.default.set,\n    cond = react_native_reanimated_1.default.cond,\n    add = react_native_reanimated_1.default.add,\n    sub = react_native_reanimated_1.default.sub,\n    block = react_native_reanimated_1.default.block,\n    eq = react_native_reanimated_1.default.eq,\n    neq = react_native_reanimated_1.default.neq,\n    and = react_native_reanimated_1.default.and,\n    divide = react_native_reanimated_1.default.divide,\n    greaterThan = react_native_reanimated_1.default.greaterThan,\n    greaterOrEq = react_native_reanimated_1.default.greaterOrEq,\n    not = react_native_reanimated_1.default.not,\n    proc = react_native_reanimated_1.default.proc,\n    Value = react_native_reanimated_1.default.Value,\n    spring = react_native_reanimated_1.default.spring,\n    lessThan = react_native_reanimated_1.default.lessThan,\n    lessOrEq = react_native_reanimated_1.default.lessOrEq,\n    multiply = react_native_reanimated_1.default.multiply;\n\nif (!proc) {\n  console.warn(\"Use reanimated > 1.3 for optimal perf\");\n\n  var procStub = function procStub(cb) {\n    return cb;\n  };\n\n  proc = procStub;\n}\n\nexports.getIsAfterActive = proc(function (currentIndex, activeIndex) {\n  return greaterThan(currentIndex, activeIndex);\n});\nexports.getCellStart = proc(function (isAfterActive, offset, activeCellSize, scrollOffset) {\n  return sub(cond(isAfterActive, sub(offset, activeCellSize), offset), scrollOffset);\n});\nexports.getOnChangeTranslate = proc(function (translate, isAfterActive, initialized, toValue, isPressedIn) {\n  return block([cond(or(not(isAfterActive), initialized), [], set(initialized, 1)), cond(isPressedIn, set(toValue, translate))]);\n});\nexports.hardReset = proc(function (position, finished, time, toValue) {\n  return block([set(position, 0), set(finished, 0), set(time, 0), set(toValue, 0)]);\n});\nexports.setupCell = proc(function (currentIndex, initialized, size, offset, isAfterActive, translate, prevTrans, prevSpacerIndex, activeIndex, activeCellSize, hoverOffset, scrollOffset, isHovering, hoverTo, hasMoved, spacerIndex, toValue, position, time, finished, runSpring, onHasMoved, onChangeSpacerIndex, onFinished, isPressedIn, placeholderOffset) {\n  return block([set(isAfterActive, exports.getIsAfterActive(currentIndex, activeIndex)), cond(isPressedIn, cond(isAfterActive, [cond(and(greaterOrEq(add(hoverOffset, activeCellSize), offset), lessThan(add(hoverOffset, activeCellSize), add(offset, divide(size, 2)))), set(spacerIndex, sub(currentIndex, 1))), cond(and(greaterOrEq(add(hoverOffset, activeCellSize), add(offset, divide(size, 2))), lessThan(add(hoverOffset, activeCellSize), add(offset, size))), set(spacerIndex, currentIndex))], cond(lessThan(currentIndex, activeIndex), [cond(and(lessThan(hoverOffset, add(offset, size)), greaterOrEq(hoverOffset, add(offset, divide(size, 2)))), set(spacerIndex, add(currentIndex, 1))), cond(and(greaterOrEq(hoverOffset, offset), lessThan(hoverOffset, add(offset, divide(size, 2)))), set(spacerIndex, currentIndex))]))), cond(neq(currentIndex, activeIndex), set(translate, cond(cond(isAfterActive, lessOrEq(currentIndex, spacerIndex), greaterOrEq(currentIndex, spacerIndex)), cond(isHovering, cond(isAfterActive, multiply(activeCellSize, -1), activeCellSize), 0), 0))), cond(and(isHovering, eq(spacerIndex, currentIndex)), set(hoverTo, sub(offset, scrollOffset, cond(isAfterActive, sub(activeCellSize, size))))), set(toValue, translate), cond(and(isPressedIn, neq(translate, prevTrans)), [set(prevTrans, translate), exports.getOnChangeTranslate(translate, isAfterActive, initialized, toValue, isPressedIn), cond(hasMoved, onHasMoved, set(position, translate))]), cond(neq(prevSpacerIndex, spacerIndex), [set(prevSpacerIndex, spacerIndex), cond(eq(spacerIndex, -1), [onChangeSpacerIndex, exports.hardReset(position, finished, time, toValue)])]), runSpring, cond(finished, [onFinished, set(time, 0), set(finished, 0)]), cond(eq(spacerIndex, currentIndex), set(placeholderOffset, cond(isAfterActive, add(sub(offset, activeCellSize), size), offset))), position]);\n});\nvar betterSpring = proc(function (finished, velocity, position, time, prevPosition, toValue, damping, mass, stiffness, overshootClamping, restSpeedThreshold, restDisplacementThreshold, clock) {\n  return spring(clock, {\n    finished: finished,\n    velocity: velocity,\n    position: position,\n    time: time,\n    prevPosition: prevPosition\n  }, {\n    toValue: toValue,\n    damping: damping,\n    mass: mass,\n    stiffness: stiffness,\n    overshootClamping: overshootClamping,\n    restDisplacementThreshold: restDisplacementThreshold,\n    restSpeedThreshold: restSpeedThreshold\n  });\n});\n\nfunction springFill(clock, state, config) {\n  return betterSpring(state.finished, state.velocity, state.position, state.time, new Value(0), config.toValue, config.damping, config.mass, config.stiffness, config.overshootClamping, config.restSpeedThreshold, config.restDisplacementThreshold, clock);\n}\n\nexports.springFill = springFill;","map":{"version":3,"sources":["/Users/steveruiz/GitHub/play-rn-prototype/node_modules/react-native-draggable-flatlist/lib/procs.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","react_native_reanimated_1","require","or","default","set","cond","add","sub","block","eq","neq","and","divide","greaterThan","greaterOrEq","not","proc","Value","spring","lessThan","lessOrEq","multiply","console","warn","procStub","cb","getIsAfterActive","currentIndex","activeIndex","getCellStart","isAfterActive","offset","activeCellSize","scrollOffset","getOnChangeTranslate","translate","initialized","toValue","isPressedIn","hardReset","position","finished","time","setupCell","size","prevTrans","prevSpacerIndex","hoverOffset","isHovering","hoverTo","hasMoved","spacerIndex","runSpring","onHasMoved","onChangeSpacerIndex","onFinished","placeholderOffset","betterSpring","velocity","prevPosition","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","clock","springFill","state","config"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,yBAAyB,GAAGP,eAAe,CAACQ,OAAO,CAAC,yBAAD,CAAR,CAA/C;;AACA,IAAIC,EAAE,GAAGF,yBAAyB,CAACG,OAA1B,CAAkCD,EAA3C;AAAA,IAA+CE,GAAG,GAAGJ,yBAAyB,CAACG,OAA1B,CAAkCC,GAAvF;AAAA,IAA4FC,IAAI,GAAGL,yBAAyB,CAACG,OAA1B,CAAkCE,IAArI;AAAA,IAA2IC,GAAG,GAAGN,yBAAyB,CAACG,OAA1B,CAAkCG,GAAnL;AAAA,IAAwLC,GAAG,GAAGP,yBAAyB,CAACG,OAA1B,CAAkCI,GAAhO;AAAA,IAAqOC,KAAK,GAAGR,yBAAyB,CAACG,OAA1B,CAAkCK,KAA/Q;AAAA,IAAsRC,EAAE,GAAGT,yBAAyB,CAACG,OAA1B,CAAkCM,EAA7T;AAAA,IAAiUC,GAAG,GAAGV,yBAAyB,CAACG,OAA1B,CAAkCO,GAAzW;AAAA,IAA8WC,GAAG,GAAGX,yBAAyB,CAACG,OAA1B,CAAkCQ,GAAtZ;AAAA,IAA2ZC,MAAM,GAAGZ,yBAAyB,CAACG,OAA1B,CAAkCS,MAAtc;AAAA,IAA8cC,WAAW,GAAGb,yBAAyB,CAACG,OAA1B,CAAkCU,WAA9f;AAAA,IAA2gBC,WAAW,GAAGd,yBAAyB,CAACG,OAA1B,CAAkCW,WAA3jB;AAAA,IAAwkBC,GAAG,GAAGf,yBAAyB,CAACG,OAA1B,CAAkCY,GAAhnB;AAAA,IAAqnBC,IAAI,GAAGhB,yBAAyB,CAACG,OAA1B,CAAkCa,IAA9pB;AAAA,IAAoqBC,KAAK,GAAGjB,yBAAyB,CAACG,OAA1B,CAAkCc,KAA9sB;AAAA,IAAqtBC,MAAM,GAAGlB,yBAAyB,CAACG,OAA1B,CAAkCe,MAAhwB;AAAA,IAAwwBC,QAAQ,GAAGnB,yBAAyB,CAACG,OAA1B,CAAkCgB,QAArzB;AAAA,IAA+zBC,QAAQ,GAAGpB,yBAAyB,CAACG,OAA1B,CAAkCiB,QAA52B;AAAA,IAAs3BC,QAAQ,GAAGrB,yBAAyB,CAACG,OAA1B,CAAkCkB,QAAn6B;;AACA,IAAI,CAACL,IAAL,EAAW;AACPM,EAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb;;AACA,MAAIC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,EAAV,EAAc;AAAE,WAAOA,EAAP;AAAY,GAA3C;;AACAT,EAAAA,IAAI,GAAGQ,QAAP;AACH;;AACD1B,OAAO,CAAC4B,gBAAR,GAA2BV,IAAI,CAAC,UAAUW,YAAV,EAAwBC,WAAxB,EAAqC;AACjE,SAAOf,WAAW,CAACc,YAAD,EAAeC,WAAf,CAAlB;AACH,CAF8B,CAA/B;AAGA9B,OAAO,CAAC+B,YAAR,GAAuBb,IAAI,CAAC,UAAUc,aAAV,EAAyBC,MAAzB,EAAiCC,cAAjC,EAAiDC,YAAjD,EAA+D;AACvF,SAAO1B,GAAG,CAACF,IAAI,CAACyB,aAAD,EAAgBvB,GAAG,CAACwB,MAAD,EAASC,cAAT,CAAnB,EAA6CD,MAA7C,CAAL,EAA2DE,YAA3D,CAAV;AACH,CAF0B,CAA3B;AAGAnC,OAAO,CAACoC,oBAAR,GAA+BlB,IAAI,CAAC,UAAUmB,SAAV,EAAqBL,aAArB,EAAoCM,WAApC,EAAiDC,OAAjD,EAA0DC,WAA1D,EAAuE;AACvG,SAAO9B,KAAK,CAAC,CACTH,IAAI,CAACH,EAAE,CAACa,GAAG,CAACe,aAAD,CAAJ,EAAqBM,WAArB,CAAH,EAAsC,EAAtC,EAA0ChC,GAAG,CAACgC,WAAD,EAAc,CAAd,CAA7C,CADK,EAET/B,IAAI,CAACiC,WAAD,EAAclC,GAAG,CAACiC,OAAD,EAAUF,SAAV,CAAjB,CAFK,CAAD,CAAZ;AAIH,CALkC,CAAnC;AAMArC,OAAO,CAACyC,SAAR,GAAoBvB,IAAI,CAAC,UAAUwB,QAAV,EAAoBC,QAApB,EAA8BC,IAA9B,EAAoCL,OAApC,EAA6C;AAClE,SAAO7B,KAAK,CAAC,CAACJ,GAAG,CAACoC,QAAD,EAAW,CAAX,CAAJ,EAAmBpC,GAAG,CAACqC,QAAD,EAAW,CAAX,CAAtB,EAAqCrC,GAAG,CAACsC,IAAD,EAAO,CAAP,CAAxC,EAAmDtC,GAAG,CAACiC,OAAD,EAAU,CAAV,CAAtD,CAAD,CAAZ;AACH,CAFuB,CAAxB;AAGAvC,OAAO,CAAC6C,SAAR,GAAoB3B,IAAI,CAAC,UAAUW,YAAV,EAAwBS,WAAxB,EAAqCQ,IAArC,EAA2Cb,MAA3C,EAAmDD,aAAnD,EAAkEK,SAAlE,EAA6EU,SAA7E,EAAwFC,eAAxF,EAAyGlB,WAAzG,EAAsHI,cAAtH,EAAsIe,WAAtI,EAAmJd,YAAnJ,EAAiKe,UAAjK,EAA6KC,OAA7K,EAAsLC,QAAtL,EAAgMC,WAAhM,EAA6Md,OAA7M,EAAsNG,QAAtN,EAAgOE,IAAhO,EAAsOD,QAAtO,EAAgPW,SAAhP,EAA2PC,UAA3P,EAAuQC,mBAAvQ,EAA4RC,UAA5R,EAAwSjB,WAAxS,EAAqTkB,iBAArT,EAAwU;AAC7V,SAAOhD,KAAK,CAAC,CACTJ,GAAG,CAAC0B,aAAD,EAAgBhC,OAAO,CAAC4B,gBAAR,CAAyBC,YAAzB,EAAuCC,WAAvC,CAAhB,CADM,EAITvB,IAAI,CAACiC,WAAD,EAAcjC,IAAI,CAACyB,aAAD,EAAgB,CAClCzB,IAAI,CAACM,GAAG,CAACG,WAAW,CAACR,GAAG,CAACyC,WAAD,EAAcf,cAAd,CAAJ,EAAmCD,MAAnC,CAAZ,EAAwDZ,QAAQ,CAACb,GAAG,CAACyC,WAAD,EAAcf,cAAd,CAAJ,EAAmC1B,GAAG,CAACyB,MAAD,EAASnB,MAAM,CAACgC,IAAD,EAAO,CAAP,CAAf,CAAtC,CAAhE,CAAJ,EAAuIxC,GAAG,CAAC+C,WAAD,EAAc5C,GAAG,CAACoB,YAAD,EAAe,CAAf,CAAjB,CAA1I,CAD8B,EAElCtB,IAAI,CAACM,GAAG,CAACG,WAAW,CAACR,GAAG,CAACyC,WAAD,EAAcf,cAAd,CAAJ,EAAmC1B,GAAG,CAACyB,MAAD,EAASnB,MAAM,CAACgC,IAAD,EAAO,CAAP,CAAf,CAAtC,CAAZ,EAA8EzB,QAAQ,CAACb,GAAG,CAACyC,WAAD,EAAcf,cAAd,CAAJ,EAAmC1B,GAAG,CAACyB,MAAD,EAASa,IAAT,CAAtC,CAAtF,CAAJ,EAAkJxC,GAAG,CAAC+C,WAAD,EAAcxB,YAAd,CAArJ,CAF8B,CAAhB,EAGnBtB,IAAI,CAACc,QAAQ,CAACQ,YAAD,EAAeC,WAAf,CAAT,EAAsC,CACzCvB,IAAI,CAACM,GAAG,CAACQ,QAAQ,CAAC4B,WAAD,EAAczC,GAAG,CAACyB,MAAD,EAASa,IAAT,CAAjB,CAAT,EAA2C9B,WAAW,CAACiC,WAAD,EAAczC,GAAG,CAACyB,MAAD,EAASnB,MAAM,CAACgC,IAAD,EAAO,CAAP,CAAf,CAAjB,CAAtD,CAAJ,EAAwGxC,GAAG,CAAC+C,WAAD,EAAc7C,GAAG,CAACqB,YAAD,EAAe,CAAf,CAAjB,CAA3G,CADqC,EAEzCtB,IAAI,CAACM,GAAG,CAACG,WAAW,CAACiC,WAAD,EAAchB,MAAd,CAAZ,EAAmCZ,QAAQ,CAAC4B,WAAD,EAAczC,GAAG,CAACyB,MAAD,EAASnB,MAAM,CAACgC,IAAD,EAAO,CAAP,CAAf,CAAjB,CAA3C,CAAJ,EAA6FxC,GAAG,CAAC+C,WAAD,EAAcxB,YAAd,CAAhG,CAFqC,CAAtC,CAHe,CAAlB,CAJK,EAaTtB,IAAI,CAACK,GAAG,CAACiB,YAAD,EAAeC,WAAf,CAAJ,EAAiCxB,GAAG,CAAC+B,SAAD,EAAY9B,IAAI,CAACA,IAAI,CAACyB,aAAD,EAAgBV,QAAQ,CAACO,YAAD,EAAewB,WAAf,CAAxB,EAAqDrC,WAAW,CAACa,YAAD,EAAewB,WAAf,CAAhE,CAAL,EAAmG9C,IAAI,CAAC2C,UAAD,EAAa3C,IAAI,CAACyB,aAAD,EAAgBT,QAAQ,CAACW,cAAD,EAAiB,CAAC,CAAlB,CAAxB,EAA8CA,cAA9C,CAAjB,EAAgF,CAAhF,CAAvG,EAA2L,CAA3L,CAAhB,CAApC,CAbK,EAeT3B,IAAI,CAACM,GAAG,CAACqC,UAAD,EAAavC,EAAE,CAAC0C,WAAD,EAAcxB,YAAd,CAAf,CAAJ,EAAiDvB,GAAG,CAAC6C,OAAD,EAAU1C,GAAG,CAACwB,MAAD,EAASE,YAAT,EAAuB5B,IAAI,CAACyB,aAAD,EAAgBvB,GAAG,CAACyB,cAAD,EAAiBY,IAAjB,CAAnB,CAA3B,CAAb,CAApD,CAfK,EAiBTxC,GAAG,CAACiC,OAAD,EAAUF,SAAV,CAjBM,EAkBT9B,IAAI,CAACM,GAAG,CAAC2B,WAAD,EAAc5B,GAAG,CAACyB,SAAD,EAAYU,SAAZ,CAAjB,CAAJ,EAA8C,CAC9CzC,GAAG,CAACyC,SAAD,EAAYV,SAAZ,CAD2C,EAE9CrC,OAAO,CAACoC,oBAAR,CAA6BC,SAA7B,EAAwCL,aAAxC,EAAuDM,WAAvD,EAAoEC,OAApE,EAA6EC,WAA7E,CAF8C,EAG9CjC,IAAI,CAAC6C,QAAD,EAAWG,UAAX,EAAuBjD,GAAG,CAACoC,QAAD,EAAWL,SAAX,CAA1B,CAH0C,CAA9C,CAlBK,EAuBT9B,IAAI,CAACK,GAAG,CAACoC,eAAD,EAAkBK,WAAlB,CAAJ,EAAoC,CACpC/C,GAAG,CAAC0C,eAAD,EAAkBK,WAAlB,CADiC,EAEpC9C,IAAI,CAACI,EAAE,CAAC0C,WAAD,EAAc,CAAC,CAAf,CAAH,EAAsB,CAEtBG,mBAFsB,EAGtBxD,OAAO,CAACyC,SAAR,CAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCC,IAAtC,EAA4CL,OAA5C,CAHsB,CAAtB,CAFgC,CAApC,CAvBK,EA+BTe,SA/BS,EAgCT/C,IAAI,CAACoC,QAAD,EAAW,CAACc,UAAD,EAAanD,GAAG,CAACsC,IAAD,EAAO,CAAP,CAAhB,EAA2BtC,GAAG,CAACqC,QAAD,EAAW,CAAX,CAA9B,CAAX,CAhCK,EAiCTpC,IAAI,CAACI,EAAE,CAAC0C,WAAD,EAAcxB,YAAd,CAAH,EAAgCvB,GAAG,CAACoD,iBAAD,EAAoBnD,IAAI,CAACyB,aAAD,EAAgBxB,GAAG,CAACC,GAAG,CAACwB,MAAD,EAASC,cAAT,CAAJ,EAA8BY,IAA9B,CAAnB,EAAwDb,MAAxD,CAAxB,CAAnC,CAjCK,EAkCTS,QAlCS,CAAD,CAAZ;AAoCH,CArCuB,CAAxB;AAsCA,IAAIiB,YAAY,GAAGzC,IAAI,CAAC,UAAUyB,QAAV,EAAoBiB,QAApB,EAA8BlB,QAA9B,EAAwCE,IAAxC,EAA8CiB,YAA9C,EAA4DtB,OAA5D,EAAqEuB,OAArE,EAA8EC,IAA9E,EAAoFC,SAApF,EAA+FC,iBAA/F,EAAkHC,kBAAlH,EAAsIC,yBAAtI,EAAiKC,KAAjK,EAAwK;AAC5L,SAAOhD,MAAM,CAACgD,KAAD,EAAQ;AACjBzB,IAAAA,QAAQ,EAAEA,QADO;AAEjBiB,IAAAA,QAAQ,EAAEA,QAFO;AAGjBlB,IAAAA,QAAQ,EAAEA,QAHO;AAIjBE,IAAAA,IAAI,EAAEA,IAJW;AAMjBiB,IAAAA,YAAY,EAAEA;AANG,GAAR,EAOV;AACCtB,IAAAA,OAAO,EAAEA,OADV;AAECuB,IAAAA,OAAO,EAAEA,OAFV;AAGCC,IAAAA,IAAI,EAAEA,IAHP;AAICC,IAAAA,SAAS,EAAEA,SAJZ;AAKCC,IAAAA,iBAAiB,EAAEA,iBALpB;AAMCE,IAAAA,yBAAyB,EAAEA,yBAN5B;AAOCD,IAAAA,kBAAkB,EAAEA;AAPrB,GAPU,CAAb;AAgBH,CAjBsB,CAAvB;;AAkBA,SAASG,UAAT,CAAoBD,KAApB,EAA2BE,KAA3B,EAAkCC,MAAlC,EAA0C;AACtC,SAAOZ,YAAY,CAACW,KAAK,CAAC3B,QAAP,EAAiB2B,KAAK,CAACV,QAAvB,EAAiCU,KAAK,CAAC5B,QAAvC,EAAiD4B,KAAK,CAAC1B,IAAvD,EAA6D,IAAIzB,KAAJ,CAAU,CAAV,CAA7D,EAA2EoD,MAAM,CAAChC,OAAlF,EAA2FgC,MAAM,CAACT,OAAlG,EAA2GS,MAAM,CAACR,IAAlH,EAAwHQ,MAAM,CAACP,SAA/H,EAEnBO,MAAM,CAACN,iBAFY,EAEOM,MAAM,CAACL,kBAFd,EAEkCK,MAAM,CAACJ,yBAFzC,EAEoEC,KAFpE,CAAnB;AAGH;;AACDpE,OAAO,CAACqE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_native_reanimated_1 = __importDefault(require(\"react-native-reanimated\"));\nvar or = react_native_reanimated_1.default.or, set = react_native_reanimated_1.default.set, cond = react_native_reanimated_1.default.cond, add = react_native_reanimated_1.default.add, sub = react_native_reanimated_1.default.sub, block = react_native_reanimated_1.default.block, eq = react_native_reanimated_1.default.eq, neq = react_native_reanimated_1.default.neq, and = react_native_reanimated_1.default.and, divide = react_native_reanimated_1.default.divide, greaterThan = react_native_reanimated_1.default.greaterThan, greaterOrEq = react_native_reanimated_1.default.greaterOrEq, not = react_native_reanimated_1.default.not, proc = react_native_reanimated_1.default.proc, Value = react_native_reanimated_1.default.Value, spring = react_native_reanimated_1.default.spring, lessThan = react_native_reanimated_1.default.lessThan, lessOrEq = react_native_reanimated_1.default.lessOrEq, multiply = react_native_reanimated_1.default.multiply;\nif (!proc) {\n    console.warn(\"Use reanimated > 1.3 for optimal perf\");\n    var procStub = function (cb) { return cb; };\n    proc = procStub;\n}\nexports.getIsAfterActive = proc(function (currentIndex, activeIndex) {\n    return greaterThan(currentIndex, activeIndex);\n});\nexports.getCellStart = proc(function (isAfterActive, offset, activeCellSize, scrollOffset) {\n    return sub(cond(isAfterActive, sub(offset, activeCellSize), offset), scrollOffset);\n});\nexports.getOnChangeTranslate = proc(function (translate, isAfterActive, initialized, toValue, isPressedIn) {\n    return block([\n        cond(or(not(isAfterActive), initialized), [], set(initialized, 1)),\n        cond(isPressedIn, set(toValue, translate))\n    ]);\n});\nexports.hardReset = proc(function (position, finished, time, toValue) {\n    return block([set(position, 0), set(finished, 0), set(time, 0), set(toValue, 0)]);\n});\nexports.setupCell = proc(function (currentIndex, initialized, size, offset, isAfterActive, translate, prevTrans, prevSpacerIndex, activeIndex, activeCellSize, hoverOffset, scrollOffset, isHovering, hoverTo, hasMoved, spacerIndex, toValue, position, time, finished, runSpring, onHasMoved, onChangeSpacerIndex, onFinished, isPressedIn, placeholderOffset) {\n    return block([\n        set(isAfterActive, exports.getIsAfterActive(currentIndex, activeIndex)),\n        // Determining spacer index is hard to visualize.\n        // see diagram here: https://i.imgur.com/jRPf5t3.jpg\n        cond(isPressedIn, cond(isAfterActive, [\n            cond(and(greaterOrEq(add(hoverOffset, activeCellSize), offset), lessThan(add(hoverOffset, activeCellSize), add(offset, divide(size, 2)))), set(spacerIndex, sub(currentIndex, 1))),\n            cond(and(greaterOrEq(add(hoverOffset, activeCellSize), add(offset, divide(size, 2))), lessThan(add(hoverOffset, activeCellSize), add(offset, size))), set(spacerIndex, currentIndex))\n        ], cond(lessThan(currentIndex, activeIndex), [\n            cond(and(lessThan(hoverOffset, add(offset, size)), greaterOrEq(hoverOffset, add(offset, divide(size, 2)))), set(spacerIndex, add(currentIndex, 1))),\n            cond(and(greaterOrEq(hoverOffset, offset), lessThan(hoverOffset, add(offset, divide(size, 2)))), set(spacerIndex, currentIndex))\n        ]))),\n        // Translate cell down if it is before active index and active cell has passed it.\n        // Translate cell up if it is after the active index and active cell has passed it.\n        cond(neq(currentIndex, activeIndex), set(translate, cond(cond(isAfterActive, lessOrEq(currentIndex, spacerIndex), greaterOrEq(currentIndex, spacerIndex)), cond(isHovering, cond(isAfterActive, multiply(activeCellSize, -1), activeCellSize), 0), 0))),\n        // Set value hovering element will snap to once released\n        cond(and(isHovering, eq(spacerIndex, currentIndex)), set(hoverTo, sub(offset, scrollOffset, cond(isAfterActive, sub(activeCellSize, size)) // Account for cells of differing size\n        ))),\n        set(toValue, translate),\n        cond(and(isPressedIn, neq(translate, prevTrans)), [\n            set(prevTrans, translate),\n            exports.getOnChangeTranslate(translate, isAfterActive, initialized, toValue, isPressedIn),\n            cond(hasMoved, onHasMoved, set(position, translate))\n        ]),\n        cond(neq(prevSpacerIndex, spacerIndex), [\n            set(prevSpacerIndex, spacerIndex),\n            cond(eq(spacerIndex, -1), [\n                // Hard reset to prevent stale state bugs\n                onChangeSpacerIndex,\n                exports.hardReset(position, finished, time, toValue)\n            ])\n        ]),\n        runSpring,\n        cond(finished, [onFinished, set(time, 0), set(finished, 0)]),\n        cond(eq(spacerIndex, currentIndex), set(placeholderOffset, cond(isAfterActive, add(sub(offset, activeCellSize), size), offset))),\n        position\n    ]);\n});\nvar betterSpring = proc(function (finished, velocity, position, time, prevPosition, toValue, damping, mass, stiffness, overshootClamping, restSpeedThreshold, restDisplacementThreshold, clock) {\n    return spring(clock, {\n        finished: finished,\n        velocity: velocity,\n        position: position,\n        time: time,\n        // @ts-ignore -- https://github.com/software-mansion/react-native-reanimated/blob/master/src/animations/spring.js#L177\n        prevPosition: prevPosition\n    }, {\n        toValue: toValue,\n        damping: damping,\n        mass: mass,\n        stiffness: stiffness,\n        overshootClamping: overshootClamping,\n        restDisplacementThreshold: restDisplacementThreshold,\n        restSpeedThreshold: restSpeedThreshold\n    });\n});\nfunction springFill(clock, state, config) {\n    return betterSpring(state.finished, state.velocity, state.position, state.time, new Value(0), config.toValue, config.damping, config.mass, config.stiffness, \n    //@ts-ignore\n    config.overshootClamping, config.restSpeedThreshold, config.restDisplacementThreshold, clock);\n}\nexports.springFill = springFill;\n"]},"metadata":{},"sourceType":"script"}